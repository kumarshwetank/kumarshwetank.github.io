%!PS-Adobe-2.0 EPSF-1.2
%%Pages: 1
%%DocumentFonts:
%%BoundingBox: 11 8 464 321
%%HiResBoundingBox: 11.735015 8.163351 463.202423 320.908279
%%EndComments

%%BeginProlog
%%BeginPreview: 453 314 8 3768
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000002244444444444444444444
% 44558888888888888888888888888888888888888888888888888888888888888888444444444444
% 44444444220000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000004444444444668888888888bbbbbcbcbcbcbcddffffffffffffffffffffffffffffffffffff
% fffffff1e7e0d2bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcddffffffffffffffff
% ffffffffffffffffffffffffbcbcbcbcbcbb88888888886644444422000000000000663300000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000011444444448888888899bcbcbcccffff
% ffffffffffffffffffe8e0e0e0ededd8d8d8c9c9b992784646464646464646140303030303030303
% 030335eec3cdffffab78240303030303030303030303030303030303030303030303030303030303
% 03030346464646464646468a8a8a8a8a8abcbcbcbcbccdffffffffffffffffddbcceffd088887744
% 44330000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000033444455888888aabcbcbcfffffffffffffffff5e0e0e0e0dcd8d8e2ffff
% ffffffffffffffffc2c3c3c3c3c3969696b4c3c3ffffcf7814030303030303030303030303030303
% 0335eecd140314679beeffde8a570303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030314464646578aa1f7d0bcbcbceeff
% ffffffffeebcbcaa8888664433000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000004444
% 55888888bbbcbceeffffffffffffdaecece0d0d8d8d5ffffffffffffffffd2c3c3c3969696967759
% 5959591d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2c68a5e1df350303030303030303030303030303
% 14eecd14030303030303358acdffffbc783503030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030335eeab030303030303
% 03354646788a8abcbcbcffffffffffbcbc8888664433000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000004444668888aabcbcffffffffff
% ffe7e0e0d1ded8d5ffffffffffffffe5c3c3c3969696775959591d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2cb4ff6703030303030303030303030314
% cdcd140303030303030303030314679beeffde9b5714030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030324eecd14030303030303
% 0303030303030303030303033546678a8abcbcffffffffffbcaa8866441100000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000004444668888bbbcddffffffffffe0e0e0e0d8d5ffffffff
% ffffe1c3c3a59696775959591d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d96ef140303030303030303030314cd
% de14030303030303030303030303030303358acdffffbc7835030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030314cdcd1403030303030303
% 0303030303030303030303030303030303030303033546678aabbcffffffffbcaa88664411000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000003344668888bcccffffffffffe0e0dbd8e2ffffffffffe0c3c3a596967759593b
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2cf08a03030303030303030314cdee
% 350303030303030303030303030303030303030314579bdeffde9b57140303030303030303030303
% 0303030303030303030303030303030303030303030303030303030314cdcd140303030303030303
% 030303030303030303030303030303030303030303030303030303031446678aabbcffffffeebc88
% 66330000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 33447788aabceeffffffffe0ead8ecffffffffffd2c3b4969668594a1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d96be030303030303030303abee35
% 0303030303030303030303030303030303030303030303033578bcffffbc78350303030303030303
% 03030303030303030303030303030303030303030303030303030314cdee35030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303031446789bbc
% ffffffcc998844220000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000044558899bcddff
% fffff7e0dfecffffffffd1c3a5969659593b1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d96be03030303030303039bee3503
% 03030303030303030303030303030303030303030303030303030314579bdeffee9b671403030303
% 0303030303030303030303030303030303030303030303030303039bee3503030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0324578aabdeffffeeaa884400000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000022448888bcddffffffe6e2ffffff
% fff0c3c3969659592c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d96be030303030303039bff460303
% 030303030303030303030303030303030303030303030303030303030303033578bcffffcd8a3503
% 03030303030303030303030303030303030303030303030303039bee350303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030346789bdeffffcc8855220000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000011447799bcfffffff0e2eaffffffd2c39677594a
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1dd29b0303030303039bff67030303
% 0303030303030303030303030303030303030303030303030303030303030303030314579bdeffee
% 9b6714030303030303030303030303030303030303030303039bff57030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030324578abcffffddaa772200000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000114488aaddfffff0e8f5ffffe1c39696593b1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d3bff57030303030367ff6703030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303032478
% abffffcd8a3503030303030303030303030303030303030378ff6703030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303034678abeeffdd995511000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000226699ddffffd7d1eaffffd2a586591d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d86df030303030367ff670303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303578adeffee9b67240303030303030303030303030367ff670303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303358abcffffbc7733000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000005599ddffffbc8a6bc1ffe196591d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2cf08a0303030367ff8a030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303032478abffffcd8a4603030303030303030367ff8a030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030314579bdeffee9955000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000002288eeffcd8a4603149bffc3591d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1da5ef1403030357ff9b03030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303578adeffeeab67240303030346ff9b03030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303033578cdffee9933000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000002299ffee8a2403030314cee1771d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d59ff5703030335ee9b0303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303032478abeeffcd8a4635ee9b0303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303032478cdffdd8822000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 001188ffde67030303030314cff02c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2cd2bd03030335ee9b030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303468acdfffee3672403030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303358adeffcc7711
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 88eeee6703030303030303cef04a1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1dc3ef14030335eecd14030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030324f0e1b1eeffcd8a5703030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303359beeff
% 99220000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000066dd
% ee8a140303030303030357ff4a1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1da5ef35030314eecd1403030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030314cdcd140303468acdffffab7824030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030367
% deffbc44000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000033ccff9b
% 240303030303030303038bd21d1d1d1d1d1d1d1d1d1d1d2c96685959771d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d77861d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d3b861d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d86ff57030314cdcd140303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030314cdcd140303030303032467abeeffde8a57030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0357bcffcc6600000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000088ffbc2403
% 03030303030303030303df961d1d1d1d1d1d1d1d1d1d1dc33b1d1d3b961d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d59961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d771d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2c681d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d96ff67030314cdde14030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030314cdee350303030303030303030303468acdffffab78240303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303359bffdd660000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000033ccee78030303
% 03030303030303030314ff591d1d1d1d1d1d1d1d1d1d59c31d1d1d1d4a4a593b3b1d4a593b1d4a59
% 1d594a1d4a593b591d1d3b4a77961d1d1d1d4a594a593b4a591d3b682c1d59c3592c1d59683b4a59
% 3b3b1d1d1d1d4a593b3b1d59683b2c59593b1d59683b4a593b3b4a592c3b591d4a593b1d4a591d4a
% 593b3b1d1d1d1d1d1d1d1d1d1d1d1d1d1d1da5ff67030314cdee3503030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303039bee3503030303030303030303030303030314679beeffde8a
% 57030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303248affcc44000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000088ffbc2403030303
% 03030303030303030303ef861d1d1d1d1d1d1d1d1d1d96961d1d1d1d1d1de14a6859771d86591dc3
% 1d59961d1de12c59864a861d68961d1d1d1d2cb41da51d3b594a861da51d1dc31d1d68771da51de1
% 4a681d1d1d1d1de14a6868771da5961d2c5968771da51de14a682cc31d3b5959771d86591dc31d1d
% e14a681d1d1d1d1d1d1d1d1d1d1d1d1d1da5ff67030303abee350303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303039bee350303030303030303030303030303030303030303358acd
% ffffbc78350303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030324bcff992200000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000033ccee78030303030303
% 03030303030303030303bf961d1d1d1d1d1d1d1d1d1d68b41d1d3b86962cc31d1db42c1d59a51dc3
% 1d59961d1dc31d5996a5591d59961d1d1d1d1db42c9668681d1d6859c31d1dc31d1db46859961dc3
% 1d1d1d1d1d1d1dc31d1db468599668c3962cb46859961dc31d1d1d963b591db42c1d59a51dc31d1d
% c31d1d1d1d1d1d1d1d1d1d1d1d1d1d2cc3ef350303039bee35030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303039bff57030303030303030303030303030303030303030303030303
% 14679beeffde9b571403030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030357deee88000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000088ffbc2403030303030303
% 030303030303030303038bd21d1d1d1d1d1d1d1d1d1d1dd22c1d1d59961dc31d1da54a1d59961dc3
% 1d59961d1dc31d599696591d59961d1d1d1d1d68962c96681d77771dc33b1dc31d4aa54a1d2c1dc3
% 1d1d1d1d1d1d1dc31d1da54a1d2c681d5996a54a1d2c1dc31d1d1d3b96591da54a1d59961dc31d1d
% c31d1d1d1d1d1d1d1d1d1d1d1d1d59f0ce350303039bff4603030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030378ff6703030303030303030303030303030303030303030303030303
% 03030303358acdffffbc783503030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303038aeedd4400000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000033ccee78030303030303030303
% 0303030303030303030346ff681d1d1d1d1d1d1d1d1d1d4ab44a3b77864ae14a1d3b8659862c1d96
% 4a68b42c4ae13b86b43a963b86b42c1d1d1d1d1da51d963b1d68964ab4591da5683b2c8659684ae1
% 4a1d1d1d1d1d4ae14a1d2c865968a54a59682c8659684ae14a1d1d1da52c1d3b8659862c4ae13b4a
% e14a1d1d1d1d1d1d1d1d1d1d1d96fff9e08a57039bff670303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030367ff670303030303030303030303030303030303030303030303030303
% 0303030303030314579bdeffde9b5714030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030324abff88000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000055eecd2403030303030303030303
% 03030303030303030303038bf02c1d1d1d1d1d1d1d1d1d1d1d4a4a1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d3bc3ef673578cdfff9ffa4140303030303030303031403030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030367ff8a030303030303030303030303030303030303030303030303030303
% 03030303030303030303033578bcffffbc7835030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030378ffab1100000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000088ff9b030303030303030303030303
% 030303030303030303030314dfb41d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d96ffce3503030303dcffcdffffab78240303030303038aee9b6714030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030346ff9b03030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030314579bdeffee9b67140303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030346eecc22000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000011bcee6703030303030303030303030303
% 03030303030303030303030346ff771d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d59e1ef78030303030367ffc90314579beeffcd8a350303032478abffff350303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030335ee9b0303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303033578bcffffcd8a350303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030324cdee440000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000033eede350303030303030303030303030303
% 030303030303030303030303038aff961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d3bb4ffac24030303030357fff28a0303030303468adeffde8a570303030357030367
% de9b5714030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030335eeab030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030314579bdeffee9b671403030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303149bff6600000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000066ffbc14030303030303030303030303030303
% 030303030303030303030303030367ffb42c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d3ba5ffde4603030303030335ee9bff4603030303030303033578cdffee9b671403030324
% 78bcffff570303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030324eecd14030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303032478abffffcd8a3503030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303038aff44000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000011c2ff8a0303030303030303030303030303030303
% 03030303030303030303030303030335efd22c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d3ba5ffde670303030303030335ee9b24ff4603030303030303030303032467abffffab782403
% 03031457240324de8a57030303030303030303030303030303030303030303030303030303030303
% 030303030314cdcd1403030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303578adeffee9b6724030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303039bee330000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000011cffdff8a1403030303030303030303030303030303
% 0303030303030303030303030303030335cef0771d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 68a5ffde67030303030303030335eecd1446ff03030303030303030303030303030314579beeffcd
% 8a3503030303148acdffff8a03030303030303030303030303030303030303030303030303030303
% 0303030314cdcd140303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303032478abffffcd8a46
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303cdee1100000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000033eecd2467eeee8a140303030303030303030303030303
% 0303030303030303030303030303030303149bffd2591d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d3b96e1
% ffbd6703030314030303030314eecd140367ff03030303030303030303030303030303030303468a
% deffde8a57030303031467460303ab8a4603038a1403030303030303030303030303030303030303
% 03030314cdee35030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303578adeff
% eeab6724030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030314cdcc11000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000055eebc148a46148aeeee8a14030303030303030303030303
% 0303030303030303030303030303030303030324bdffc33b1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d3b77c3ffdf8b
% 240303030335ee4603030314cdcd1403038abc030303030303030303030303030303030303030303
% 033578cdffee9b671403030303038acdffeeb1ffde35030303030303030303030303030303030303
% 0303039bee3503030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030324
% 78abeeffcd8a46030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030335eeaa000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000066ff9b0314bcffbc46148aeeee8a1403030303030303030303
% 03030303030303030303030303030303030303030346ceffa52c1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2c6896d2ffff9b570303
% 0303030335eeab03030314cdde14030303cd8a030303030303030303030303030303030303030303
% 030303032467abffffab7824030303032467c0ffffff8a0303030303030303030303030303030303
% 03039bee350303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303468acdffeeab67240303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030346ff440000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000099ff780303030346bcffbc24148aeeee78030303030303030303
% 030303030303030303030303030303030303030303030367dfffa5591d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2c598696c3ffffcf8a460303030303
% 03030335eecd14030314cdee3503030314ff57030303030303030303030303030303030303030303
% 0303030303030314579beeffcd8a35030303decdbcbcbc6703030303030303030303030303030303
% 039bff57030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303032467abeeffcd8a570303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303abdd0000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000011aaee670303030303030346bcff9b24148aeede6703030303030303
% 0303030303030303030303030303030303030303030303031467ceffe1772c1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d2c5959595968969696969696969696966896969696b4c3ffffffefbe8a57140303030303030303
% 0303038acd14030303abee350303030367ff03030303030303030303030303030303030303030303
% 0303030303030303030303468adeffde8a5703030303030303030303030303030303030303030303
% 78ff6703030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303468acdffffab782403030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030324ff7700000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000011ccee350303030303030303030367deff9b24249bffde670303030303
% 030303030303030303030303030303030303030303030303030303359beff0a5591d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2c599696a5c3c1ff
% ffffffffffffffffdebebebebebebeceffffdebebebebc8a67460303030303030303030303030303
% 03030303140303039bee3503030303039bbc03030303030303030303030303030303030303030303
% 03030303030303030303030303033578cdffee9b6714030303030303030303030303030303030367
% ff670303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303032467abeeffde8a5703030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303038aee11000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000033eecd240303030303030303030303030367deff9b24249bffde67030303
% 03030303030303030303030303030303030303030303030303030303031467cdfff0a5681d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d4a7796c3f0ffffdebebc8a8a67
% 46461403030303030303030303030303030303030303030303030303030303030303030303030303
% 356703030303039bff46030303030303de7803030303030303030303030303030303030303030303
% 03030303030303030303030303030303032467abffffab78240303030303030303030303030367ff
% 8a030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303468acdffffab7824030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030314ee66000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000055eebc140303030303030303030303030303030367deff8a14249bffde5703
% 03030303030303030303030303030303030303030303030303030303030303032478ceffffc39659
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2c6896c3ffffffbd8a784603030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030335
% eecd030303039bff670303030303036bff3503030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030314579beeffcd8a3503030303030303030346ff9b
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030314679beeffde8a57030303030303030303030303
% 03030303030303030303030303030303030303030303030303039bcc000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000066ff9b030303030303030303030303030303030303030367deee8a14249bffbc
% 460303030303030303030303030303030303030303030303030303030303030303030324679bdfff
% ffc39659591d1d1d1d1d1d1d1d1d1d1d1d3b5996b4e1ffffe58a6724030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303030314cd
% cd1403030367ff6703030303030303c9fd0303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303468adeffde8a57030303030335ee9b03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303358acdffffbc78350303030303030303
% 030303030303030303030303030303030303030303030303030346ff220000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000088ff8a03030303030303030303030303030303030303030303038aeeee8a1435bc
% ffbc4603030303030303030303030303030303030303030303030303030303030303030303030324
% b9e6deffffffffc3c3969696a5c3c3c3f0ffffdfac99f3bc03030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030314cdcd
% 1403030367ff670303030303030303e7ff0303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303033578cdffee9b671435eeab0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030314679beeffde9b571403030303
% 030303030303030303030303030303030303030303030303030303de880000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000099ff6703030303030303030303030303030303030303030303030303148aeeee8a14
% 46bcffbc460303030303030303030303030303030303030303030303030303030303030303030303
% bc8a03032446678a9bbebebebe9d8a8a7846030314cdcd1403030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303038a14
% 03030367ff8a030303030303030367ffff4603030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303032467abfffffde9330303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303358acdffffbc783503
% 0303030303030303030303030303030303030303030303030303038add0000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000011aaee6703030303030303030303030303030303030303030303030303030303148aeeee
% 8a0346bcffbc35030303030303030303030303030303030303030303030303030303030303030303
% ff67030303030303030303030303030303030303bcee140303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303031403030303
% 030357ff9b030303030303030303bc9bde8a03030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030324defff3ffcd8a
% 35030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030314579bdeffde
% 9b571403030303030303030303030303030303030303030303030324ff3300000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000011ccee3503030303030303030303030303030303030303030303030303030303030303148a
% eede670346bcff9b2403030303030303030303030303030303030303030303030303030303030303
% ff4603030303030303030303030303030303039bee35030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030314cd8a030303
% 0335ee9b03030303030303030335ff469bab03030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030314cdcdff57468ade
% ffde8a57030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303033578
% bcffffbc783503030303030303030303030303030303030303030303cd9900000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000033ccde3503030303030303030303030303030303030303030303030303030303030303030303
% 149bffde670346deff9b240303030303030303030303030303030303030303030303030303030335
% ff46030303030303030303030303030303038aff5703030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030314cdee24030303
% 35ee9b030303030303030303039bcd0378ee03030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030314cdee35cd8a030303
% 3578cdffee9b67140303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0314579bdeffee9b671403030303030303030303030303030303030378ee00000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0033eecd140303030303030303030303030303030303030303030303030303030303030303030303
% 0303249bffde670367deff9b24030303030303030303030303030303030303030303030303030335
% ff4603030303030303030303030303030367ff6703030314cd8a0303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030314cdee3503030335
% eecd1403030303030303030314ff670335ff24030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303039bee3503bc9b030303
% 0303032467abffffab78240303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303033578bcffffcd8a3503030303030303030303030303030314ff66000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 55eebc14030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030324b6ffde670367deff9b2403030303030303030303030303030303030303030303030303
% ff46030303030303030303030303030335ff9b030303039bee350303030303030335bc0303030303
% 03030303030303030303030303030303030303030303030303030303030303038aee3503030314ee
% cd14030303030303030303039bde030303de8a030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303039bee3503038abc030303
% 03030303030314579beeffcd8a350303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030314579bdeffee9b6714030303030303030303030303abaa000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000066
% ff9b0303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303039bff699bffbc460367deee8a140303030303030303030303030303030303030303030303
% ff460303030303030303030303030335ee9b0303030378ff46030303030303030346ff0303030303
% 03030303030346ff030303030303030303030303030303030303030303030303032403030314cdcd
% 140303030303030303030324ff670303038ade030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303039bff5703030378ee030303
% 03030303030303030303468adeffde8a570303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303032478abffffcd8a3503030303030303030357ff220000000000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000088ff
% 8a030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303039beeff460324bcffbc460378eeee8a14030303030303030303030303030303030303030303
% ff4603030303030303030303030314cdcd1403030357ff7803030303030303030346ff0303030303
% 03030303030346ff030303030303030303030303030303030303030303148a030303030314cdde14
% 03030303030303030303039bde0303030324ff570303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030378ff670303030335ff240303
% 030303030303030303030303033578cdffee9b671403030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303578adeffee9b6724030303030303ee770000000000000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000000099ff67
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03039bee35ff4603030346bcffbc46148aeeee8a1403030303030303030303030303030303030303
% ff46030303030303030303030314cdde1403030314ee9b0303030303030303030346ff0303030303
% 03030303030346ff030303030303030303030303030303030303030303bcee2403030314cdee3503
% 0303030303030303030346ff570303030303abab0303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030367ff67030303030303de9b0303
% 030303030303030303030303030303032467abffffab782403030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303032478abffffcd8a460303039bdd0000000000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000011ccee4603
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 039bff4603ff46030303030346bcffbc46148aeeee8a140303030303030303030303030303030303
% de8a03030303030303030303039bee35030303030357030303030303030303030346ff0303030303
% 03030303030346ff03030303030303030303030303030303030303039bee3503030303abee350303
% 03030303030303030303bcbc03030303030367ff2403030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030367ff8a0303030303030367ff2403
% 0303030303030303030303030303030303030314579beeffcd8a3503030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303578adeffeeab6750ff3300000000000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000022ccee350303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 9bff670303ff460303030303030346bcffab24148aeeee6703030303030303030303030303030303
% bc8a030303030303030303038aff4603030303030303030303030303030303030346ff0303030303
% 03030303030346ff030303030303030303030303030303030346cda1ee35030303039bee35030303
% 03030303030303030346ff4603030303030303ee8a03030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030346ff9b030303030303030303de9b03
% 0303030303030303030303030303030303030303030303468adeffde8a5703030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303032478abeefff8c844000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000033eecd14030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303039b
% ff67030303ff4603030303030303030346cdff9b24148affde670303030303030303030303030303
% 9bbc03030303030303030367ff670303030367030303030303030303030303030346ff0303030303
% 03030303030346ff0303030303030303030303030303030303abffe143030303039bff4603030303
% 030303030303030303deab030303030303030378ff46030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030335ee9b030303030303030303037bff46
% 03030303030303030303030303030303030303030303030303033578cdffee9b6714030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303359b67468a240303030303030303030303359b0303030303030303030303030303
% 03030303030303030303030303247803030303030303030303030303030346c0fcff880000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000055eebc1403030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303038aff
% 6703030303ff46030303030303030303030367deff9b24249bffde67030303030303030303030303
% 8abc030303030303030346ff8a0303030367ff460303030303030303030303030346ff0303030303
% 03030303030346ff4603030303030303030303030303030324ffffffab0303039bff670303030303
% 030303030303030378ff24030303030303030303abde140303030303030303030303030303030303
% 030303030303030303030303030303030303030303030335eeab030303030303030303030346ffff
% 8a030303030303030303030303030303030303030303030303030303032467abffffab7824030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303bc460314ee030303030303030303030303bc0303030303030303030303030303
% 0303030303030367030303030314570303030303030303030303030303030324ff6c110000000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000077ff9b030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030367ff67
% 0303030303ff460303030303030303030303030367deff9b24249bffde6703030303030303030303
% 67ff0303030303030335ee9b0303030346ff8a030303030303030303030303030346ff4603030303
% 03030303030314ff460303030303030303030303030303039bffde6703030367ff67030303030303
% 0303030303030314ee8a0303030303030303030314ee8a0303030303030303030303030303030303
% 0303030303030303030303030303030303030303030324eecd14030303030303030303030346ff78
% ffbc46030303030303030303030303030303030303030303030303030303030314579beeffcd8a35
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303bc460314ee030335462403032446240303bc0346350303033546244603354603
% 03245714030346bc464346242435460335461435460303030303030303030303abaa000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000099ff7803030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030367ff6703
% 0303030303ff4603030303030303030303030303030367deff8a14249bffde460303030303030303
% 46ff24030303030314eecd0303030335ee9b03030303030303030303030303030324ff4603030303
% 03030303030303ff46030303030303030303030303030324de670303030367ff6703030303030303
% 030303030303039bde14030303030303030303030357ff6703030303030303030303030303030303
% 03030303030303030303030303030303030303030314cdcd1403030303030303030303030346ff03
% 35cdffffbc8a674646464646464646140303030303030303030303030303030303030303468adeff
% de8a5703030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303bc78468a24034667037846468a03ab0303bc14781403030303de1446ab038a35
% 3578039b030303bc0303de355703bc0314ab147824030303030303030303030367ff110000000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000011ccee570303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030367ff670303
% 0303030303ff46030303030303030303030303030303030367deee8a14249bffbc46030303030303
% 03ff460303030314cdcd1403035724cdcd1403030303030303030303030303030303ff4603030303
% 03030303030303ff46030303030303030303030303030314030303030367ff8a0303030303030303
% 03030303030335ff67030303030303030303030303039bff67030303030303030303030303030303
% 030303030303030303030303030303030303030314cdcd140303030303030303030303030346ff03
% 030324679bcdffffffffffffffffffffffffbcbc8a46030303030303030303030303030303030335
% 78cdffee9b6714030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303bc4603786703ab1403469b9b4603030303cd9b140303030303bc03468a038a46
% 035746bc030303bc0303bc030303bc030314cd1403030303030303030303030303ee770000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000033ddde35030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030367ff8a030303
% 0303030314ff46030303030303030303030303030303030303148aeeee8a1446bcffbc4603030303
% 03cd8a03030303abee35030303eedef0140303030303030303030303030303030303ff4603030303
% 03030303030303ff460303030303030303030303030303030303030357ff9b030303030303030303
% 030303030303bcbc03030303030303030303030303030367ff9b0303030303030303030303030303
% 0303030303030303030303030303030303030314cdee35030303030303030303030303030346ff03
% 0303030303030303030303030303144646678a9bdeffee9b14030303030303030303030303030303
% 03032467abffffab7824030303030303030303030303030303030303030303030303030303030303
% 0303030303030303bc460346ab039b3503468a8a4603140303bc248a0303030303bc03468a038a46
% 676703bc240303bc0335bc030303bc030324578a030303030303030303030303039bcc0000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000066eebc1403030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030367ff9b03030303
% 0303030346ff240303030303030303030303030303030303030303148aeeee8a1446bcffbc460303
% 03abab0303039bee3503030357ffffee350303030303030303030303030303030303ff4603030303
% 03030303030303ff4603030303030303030303030303030303030335ee9b03030303030303030303
% 030303030346ff460303030303030303030303030303030367ffbc24030303030303030303030303
% 030303030303030303030303030303030303039bee3503030303030303030303030303030346ff03
% 0303030303030303030303030303030303030303032467cd14030303030303030303030303030303
% 030303030314579beeffcd8a35030303030303030303030303030303030303030303030303030303
% 0303030303030335cd8a1424cd145078467814148a46670335cd249b7803030335de2478ab249b8a
% 578a35ab4603039b5750de350335de2467ab03bc7814030303030303030303030335ff3300000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000088ff9b030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030367ff9b0303030303
% 0303030346ff0303030303030303030303030303030303030303030303148aeeee780346bcffbc24
% 038ade030367ff6703030303abffff8a140303030303030303030303030303030303ff4603030303
% 03030303030303ff46030303030303030303030303030303030335ee9b0303030303030303030303
% 0303030303bcbc03030303030303030303030303030303030346cdff8a1403030303030303030303
% 0303030303030303030303030303030303039bee35030303030303030303030303030303038aee03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303468adeffde8a57030303030303030303030303030303030303030303030303
% 03030303030303030303030314350303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303de8800000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000001199ff6703030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030346ff9b030303030303
% 0303030346ff03030303030303030303030303030303030303030303030303148aeede670346bcff
% 9b5eff1467ff780303030314ffbc2403030303030303030303030303030303030303ff4603030303
% 03030303030303ff460303030303030303030303030303030335eecd140303030303030303030303
% 0303030346ff46030303030303030303030303030303030303030378eeee8a240303030303030303
% 03030303030303030303030303030303039bff5703030303030303030303030303030303038abc03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303033578cdffee9b67140303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303038aee00000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000022ccee460303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030335ee9b03030303030303
% 0303030367ff030303030303030303030303030303030303030303030303030303249bffde670357
% deffb65cee9b03030303034657030303030303030303030303030303030303030303ff4603030303
% 03030303030303ff4603030303030303030303030303030314eecd14030303030303030303030303
% 03030303cdab030303030303030303030303030303030303030303031478deffbc78240303030303
% 0303030303030303030303030303030378ff670303030303030303030303030303030303038abc03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303032467abffffab78240303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030324ff55000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000055eecd35030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030335ee9b0303030303030303
% 030303038abc0303030303030303030303030303030303030303030303030303030303249bffde67
% 0367e2ffe42403030303030303030303030303030303030303030303030303030303ff4603030303
% 03030303030303ff57030303030303030303030303030314cdcd1403030303030303030303030303
% 03030346ff2403030303030303030303030303030303030303030303030303469beeffcd78240303
% 03030303030303030303030303030367ff6703030303030303030303030303030303030303bc9b03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030314579beeffcd8a350303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303bcaa000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000088ff9b1403030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030335ee9b030303030303030303
% 03030303ab9b03030303030303030303030303030303030303030303030303030303030303249bff
% de57bce1e0ff9b140303030303030303030303030303030303030303030303031446ff7735030303
% 03030303031446ffa93503030303030303030303030314cdde140303030303030303030303030303
% 0303039bcd0303030303030303030303030303030303030303030303030303030303579beeffcd03
% 030303030303030303030303030367ff8a0303030303030303030303030303030303030303de8a03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303468adeffde8a570303030303030303030303
% 03030303030303030303030303030303030303030303030303030303ee0303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030367ff110000
% 00000000000000000000000000
% 00000000000000000000000000000000000011bbff67030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030335eebc03030303030303030303
% 03030303cd8a03030303030303030303030303030303030303030303030303030303030303030324
% 9bffc9520367deee8a140303030303030303030303030303030303030303030314ffffff78030303
% 030303030314eeffff8a030303030303030303030314cdee35030303030303030303030303030303
% 030314ee670303030303030303030303030303030303030303030303030303030303030303356703
% 0303030303030303030303030346ff9b030303030303030303030303030303030303030303ff4603
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303033578cdffee9b671403030303030303
% 03030303030303030303030303030303030303030303030303030303350303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030314ee770000
% 00000000000000000000000000
% 000000000000000000000000000000000044eede3503030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030335eecd1403030303030303030303
% 03030303ff5703030303030303030303030303030303030303030303030303030303030303030303
% 0335bcffbc46038aeeee8a140303030303030303030303030303030303030303039bffff24030303
% 0303030303039bffff350303030303030303030303abee3503030303030303030303030303030303
% 030367ff140303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030335ee9b03030303030303030303030303030303030303030335ff2403
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303032467abffffab782403030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303039bcc0000
% 00000000000000000000000000
% 0000000000000000000000000000000077ffab140303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030335eecd140303030303030303030303
% 03030357ff2403030303030303030303030303030303030303030303030303030303030303030303
% 03030346c9ffbc46148aeeee8a140303030303030303030303030303030303030346ffcd03030303
% 03030303030335ffde03030303030303030303039bee350303030303030303030303030303030303
% 0303bc9b030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030335eeab0303030303030303030303030303030303030303030367ff0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030314579beeffcd8a3503
% 03030303030303030303030303030303030303030303030303464603030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030346ff2200
% 00000000000000000000000000
% 000000000000000000000000000011aaff7803030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030314eecd14030303030303030303030303
% 0303039bcd0303030303030303030303030303030303031403030303030303030303030303030303
% 03030335eea9bcffbc46148aeeee8a14030303030303030303030303030303030303de7803030303
% 03030303030303de8a030303030303030303039bff46030303030303030303030303030303030303
% 0314ff57030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030324eecd1403030303030303030303030303030303030303030303cd9b0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303468adeffde
% 8a570303030303030303030303030303030303030303030303575703030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303de8800
% 00000000000000000000000000
% 0000000000000000000000000055eede460303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030314cdcd1403030303030303030303030303
% 030303ee780303030303030303030303030303148acdffffab460303030303030303030303030303
% 030335eeab030346bcff9b24148aeede670303030303030303030303030303030303782403030303
% 0303030303030378350303030303030303039bff6703030303030303030303030303030303030303
% 0346ff14030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030314cdcd140303030303030303030303030303030303030303030346ff460303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303033578
% cdffee9b671403030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303038add00
% 00000000000000000000000000
% 00000000000000000000001188ffab14030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030314cdcd140303030303030303030303030303
% 030357ff24030303030303030303030303038aeeee8a5757bccd0303030303030303030303030303
% 0335eecd140303030346deff9b24148affde67030303030303030303030303030303140303030303
% 030303030303031403030303030303030367ff670303030303030303030303030303030303030303
% 0378ee03030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030314cdcd140303030303030303030303030303030303030303030303abbc030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 032467abffffab782403030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030324ff55
% 00000000000000000000000000
% 0000000000000000000011ccee570303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030314cdcd14030303030303030303030303030303
% 0303debc03030303030303030303030335cdee8a1403030303140303030303030303030303030303
% 14eecd140303030303030367deff9b24249bffde6703030303030303030303030303030303030303
% 0303030303030303030303030303030367ff67030303030303030303030303030303030303030303
% 039bbc03030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030314cdee3503030303030303030303030303030303030303030303039bff57359b67
% 46578a03030303030303030303030303030303030303030303030303032478030303030303030303
% 030303030303359b6746578a359b0303030303030324780303030367780303030303030303030303
% 0303030314579beeffcd8a350303030303030303030303ff24030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303bc99
% 00000000000000000000000000
% 00000000000000000011cccd24030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030314cdee1403030303030303030303030303030303
% 038aee2403030303030303030303038affbc24030303030303030303030303030303030303030314
% cdcd140303030303030303030367deff9b24249bffde670303030303030303030303030303030303
% 03030303030303030303030303030367ff8a03030303030303030303030303461403030303030303
% 03bc8a03030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303039bee3503030303030303030303030303030303030303030303039bff670303bc46
% 03036703030303030303030303030303036703030303030303030303031457030303030303030303
% 03030303030303bc4603036703bc03030303030303145703030303468a0303030303030303030303
% 0303030303030303468adeffde8a5703030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303030367ff
% 11000000000000000000000000
% 000000000000000011cccd1403030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030314cdee350303030303030303030303030303030303
% 24eeb1cd24030303030303030357deee7803030303030303030303030303030303030303030314cd
% cd140303030303030303030303030367deee8a14249bffbc46030303030303030303030303030303
% 030303030303030303030303030357ff9b0303030303030303030303030303ff4603030303030303
% 036746030303030303248a0303030303030303030303030303030303030303030303030303030303
% 0303030303039bee350303030303030303030303030303030303030303030324bcff67030303bc46
% 0346243546242403245714030324462446bc46143546034635354624243546033546244603030335
% 46465703030303bc4603462403bc03354603463503354603032435678a0303030303030303030303
% 03030303030303030303033578cdffee9b6714030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303030314ee
% 66000000000000000000000000
% 0000000000000011ddcd140303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030314cdee35030303030303030303030303030303030303
% bcde35deff9b240303032467bcff9b2403030303030303030303030303030303030303030314cdee
% 240303030303030303030314240303030367eeee8a1424abffbc4603030303030303030303030303
% 0303030303030303030303030335ee9b030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff0303030303030303030303030303030303030303030303030303030303
% 03030303039bff57030303030303030303030303030303030303030303038aeecd4603030303bc78
% 678a0303de35573578039b03468a03ab03bc030303bc03468a03de355703bc0303de144678034667
% 149b2403030303bc78678a0303bc0303bc03468a0303bc03357803578a0303030303030303030303
% 03030303030303030303030303032467abffffab9c5e030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303039b
% cc000000000000000000000000
% 00000000000000aade14030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303bcee350303030303030303030303030303030303039b
% ee35030367deffffdecdffee9b460303030303030303030303030303030303030303030314cdee35
% 03030303030303030303038aff8a14030303148aeeee8a1446bcffbc460303030303030303030303
% 03030303030303030303030335ee9b03030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff0303030303030303030303030303030303030303030303030303030303
% 0303030378ff6703030303030303030303030303030303030303030346cdff8a030303030303bc46
% 03670303bc0303035746bc039b46030303bc030303bc03468a03bc030303bc0303bc03468a035767
% 03ab0303030303bc4603670303bc0303bc03468a0303bc039b4603468a0303030303030303030303
% 030303030303030303030303030303030314579bf3ffcd8a35030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030346
% ff220000000000000000000000
% 00000000000055ff4603030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303039bee350303030303030303030303030303030303039bff
% 57030303030346468a8a57030303030303030303030303030303030303030303030303039bee3503
% 03030303030303030303030378eeee8a03030303148aeeee8a1446bcffbc46030303030303030303
% 030303030303030303030335eecd1403030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff0303030303030303030303030303030303030303030303030303030303
% 03030367ff670303030303030303030303030303030303030303148affbc2403030303030303bc46
% 03030303bc0303676703bc248a46031403bc033503bc03468a03bc030303bc0303bc03468a032457
% 57140303030303bc4603030303bc0303bc03468a0303bc038a4603468a0303030303030303030303
% 030303030303030303030303030303030303030303468adeffde8a57030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% de880000000000000000000000
% 000000000022ee8a0303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303039bee3503030303030303030303030303030303030378ff67
% 03030303030303030303030303030303030303030303030303030303030303030303039bee350303
% 03030303030303030303030303148a9b030303030303148aeeee670346bcffab2403030303030303
% 0303030303030303030314eecd140303030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff0303030303030303030303030303030303030303030303030303030303
% 030367ff8a030303030303030303030303030303030303030346eeee67030303030303030335cd8a
% 24030335de3503578a35ab46148a4667039b5724038a3557ab43de350335de2435de2478ab1424cd
% bc8a1403030335cd8a24030335de24038a3557ab1435de24148a2478ab1403030303030303030303
% 0303030303030303030303030303030303031403030303033578cdffee9b67140303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 8add0000000000000000000000
% 0000000000bbde140303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303039bee350303030303030303030303030303030303038aff6703
% 030303030303030303030303030303030303030303030303030303030303030303149bee35030303
% 030303030303030303030303030303030314cd6703030303148aeede670346bcff9b240303030303
% 03030303030303030314cdcd14030303030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff0303030303030303030303030303030303030303030303030303030303
% 0346ff9b030303030303030303030303030303030303030378ffab14030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303038a03
% 03148a0303030303030303030303030303030303030303030303030303030303030303030335468a
% 8a8a8a8a6746240303030303030303030303ee24030303030303032467abffffab78240303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 24ff5500000000000000000000
% 0000000066ff35030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303039bff460303030303030303030303030303030303039bffd70303
% 030303030303030303030303030303030303030303030303030303030303030303f2ff6703030303
% 0303030303030303030303030303030303149bffde6703030303249bffde670367deff9b24030303
% 030303030303030314cdde1403030303030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff0303030303030303030303030303030303030303030303030303030303
% 35ee9b0303030303030303030303030303030303030314abff780303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303036757
% 4657460303030303030303030303030303030303030303030303030303030314679bbceeffffffde
% bcbcbcbcffffffffcdbc8a3503030303030303030303030303030303030314579beeffcd8a350303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03cd9900000000000000000000
% 00000000cc9b03030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303039bff67030303030303030303030303030303030314cdeea9bc0303
% 0303030303030303030303030303030303030303030303030303030303030303b9ff7b0303030303
% 03030303030303030303030303030303030303249bff670303030303249bffde670367deff9b2403
% 0303030303030314cdee350303030303030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff0303030303030303030303030303030303030303030303030303030335
% eeab0303030303030303030303030303030303030335cdee46030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303032478abffffbc8a7846240303
% 03030303030346578a8adeffde9b5703030303030303030303030303030303030303468adeffde8a
% 57030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0378ee00000000000000000000
% 00000033ff3503030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303039bff67030303030303030303030303030303030335dede358abc0303
% 0303030303030303030303030303030303030303030303030303030303030367ffc2030303030303
% 030303030303030303030303030303030303030303240303354603030303249bffde460367deff8a
% 14030303030303abee35030303030303030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff03030303030303030303030303030303030303030303030303030324ee
% cd1403030303030303030303030303030303030335eecd2403030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303032478cdffee9b671403030303032e3c
% 3c3c3c3c3c2003030303033578cdfff3c967030303030303030303030303030303030303033578cd
% ffee9b67140303030303030303030303030303030303030303030303030303030303030303030303
% 0314ff55000000000000000000
% 00000099cd0303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303038aff67030303030303030303030303030303030357eecd14038abc0303
% 03030303030303030303030303030303030303030303030303030303030367ffff57030303030303
% 0303030303030303030303030303030303030303030303039bffbc4603030303249bffbc460367de
% ee8a140303039bee3503030303030303030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff030303030303030303030303030303030303030303030303030314cdcd
% 1403030303030303030303030303030303030335ee9b030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303039bab0303030303030303030303
% 0303030303030303030303030303030303030303030303249bffde8a57030303205984a3ccdfe9ee
% eae6e7dcdadce4dbd4884a0303032485c7ffde670303030303030303030303030303030303030303
% 2467abffffab78240303030303030303030303030303030303030303030303030303030303030303
% 0303abaa000000000000000000
% 000011ee670303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030367ff6703030303030303030303030303030303038aff9b030303bc8a0303
% 030303030303030303030303030303030303030303030303030303030367ffc0ee03030303030303
% 0303030303030303030303030303030303030303030303030346bcff9b030303030346bcffbc4614
% 8aeeee8a149bff460303030303030303030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff0303030303030303030303030303030303030303030303030314cdcd14
% 03030303030303030303030303030303030335ee9b03030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030335ffff4603030303030303030303
% 030303030303030303030303030303030303030303148aeede670303032e68b1dad7d0d0f3ffffbd
% 8bacff5968e5ffcddfffefe49f59110303149bffde46030303030303030303030303030303030303
% 03030314579beeffcd8a350303030303030303030303030303030303030303030303030303030303
% 030367ff110000000000000000
% 000066ee140303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030367ff670303030303030303030303030303030324cdee6703030303bc8a0303
% 0303030303030303030303030303030303030303030303030303030367ff9bcd9b03030303030303
% 03030303030303030303030303030303030303030303030303030346780303140303030346bcffbc
% 46148aeef3ff72030303030303030303030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff03030303030303030303030303030303030303030303030314cdee3503
% 030303030303030303030303030303030335ee9b0303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030378780303144614030303030303
% 030303030303030303030303030303030303030378eeee8a03032076bfdfded4f2ffef9c7a380606
% 067aff77ffac170606598be0fff4eea267110324abffbc4603030303030303030303030303030303
% 03030303030303468adeffde8a570303030303030303030303030303030303030303030303030303
% 030314ee660000000000000000
% 0000bc9b030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030367ff670303030303030303030303030303030357eecd350303030303ee780303
% 03030303030303030303030303030303030303030303030303030346ff9b24ff3503030303030303
% 03030303030303030303030303030303030303030303030303030303030324ff9b140303030346bc
% ffbc35148af0ee8a0303030303030303030303030303030303030303030303ff4603030303030303
% 03030303030303030346ff0303030303030303030303030303030303030303030303039bee350303
% 0303030303030303030303030303030335ee9b030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303abff9b030303030303
% 03030303030303030303030303030303030357deff8a14032086dcdacdffefac7a38060606060606
% 38ff9bfd7a0606060606060638e8e5ffeddd64030346bcff9b140303030303030303030303030303
% 030303030303030303033578cdffee9b671403030303030303030303030303030303030303030303
% 0303039bbc0000000000000000
% 0000ff67030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030367ff8a030303030303030303030303030303148aff9b14030303030324ff460303
% 030303030303030303030303030303030303030303030303030335ee9b0357ff0303030303030303
% 0303030303030303030303030303030303030303030303030303030303030367deee8a1403030303
% 46bcff9b24148aeede67030303030303030303030303030303030303031446ff7735030303030303
% 03030303030303030346ff03030303030303030303030303030303030303030303039bee35030303
% 03030303030303030303030303030335ee9b03030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303038aff8a030303030303
% 03030303030303030303030303030303038affab24031177d4e2ffff9c5906060606060606060638
% f0f9fdf63806060606060606060606389cf0f7e649030357dede3503030303030303030303030303
% 030303030303030303030303032467abffffab782403030303030303030303030303030303030303
% 03030357ff2200000000000000
% 0033ff35030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030367ff9b0303030303030303030303030303030367ee570303030303030367ee030303
% 0303030303030303030303030303030303030303030303030335ee9b03038acd0303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303038aee2403030303
% 030357deff9b24149bffde67030303030303030303030303030303030314ffffff8a030303030303
% 03030303030303030346ff030303030303030303030303030303030303030303039bff5703030303
% 0303030303030303030303030303038acd1403030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030314abab0303
% 030303030303030303030303030303149bff67030376cddef3de691738698bacbdbdac8b7a599cff
% d9ffffee060606060606060606060606061769f0f0a33c0314bcee67030303030303030303030303
% 0303030303030303030303030303030314579beeffcd8a3503030303030303030303030303030303
% 03030303ee7700000000000000
% 0066ff03030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030367ff9b030303030303030303030303030303030303240303030303030303ab9b030303
% 03030303030303030303030303030303030303030303030335eecd0303039bab0303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303787803
% 0303030367deff9b24249bffde6703030303030303030303030303030303abffff24030303030303
% 03030303030303030346ff03030303030303030303030303030303030303030378ff670303030303
% 03030303030303030303030303030303140303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030335ffff3503
% 030303030303030303030303030324cdee46032ebecd82aaffacbdffffffe2eae2e2e6e2f5ffc277
% c3fff5eb06060606069c6f8b06060606060617efa1a8da8503039bff8a0303030303030303030303
% 0303030303030303030303030303030303030303468adeffde8a5703030303030303030303030303
% 030303039bcc00000000000000
% 0088bc03030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030346ff9b03030303030303030303030303030303030303030303030303030314ff67030303
% 030303030303030303030303030303030303030303030335eecd14030303bc8a0303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030378eede
% 67039b14030367deff9b14249bffde57030303030303030303030303030367ffcd03030303030303
% 03030303030303030346ff030303030303030303030303030303030303030367ff67030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030378670303
% 1446140303030303030303030335eecd24034acdb4361d64ceebfffff2bdac8b8b8b8b9cdeff951d
% f0ffeee60606060638fff07a060606060606ace02c1d5ccdb0110367ff9b14030303030303030303
% 03030303030303030303030303030303030303030303033578cdffee9b6714030303030303030303
% 0303030335ff33000000000000
% 00bc8a03030303030303030303030303030303030303030303030303030303030303030303030303
% 03030335ee9b0303030303030303030303030303030303030303030303030303030378ff14030303
% 0303030303030303030303030303030303030303030314cdcd1403030303ff670303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303249b
% ffcdff9b0303030367deee8a14249bffbc4603030303030303030303030314ee7803030303030303
% 03030303030303032477ff4614030303030303030303030303030303030367ff8a03030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030367460303030303030303030303030303030303030303030303030303030303
% abff8a03030303030303030367ffab140377da8f4aa4efffde8b59270606060606060606067aff7a
% ffffe6e1060606067affffee480606060669ff591d77b3b3d6bf2e0346eecd140303030303030303
% 03030303030303030303030303030303030303030303030303032467abffffab7824030303030303
% 0303030303de88000000000000
% 00ff6703030303030303030303030303030303030303030303030303030303030303030303030303
% 030335ee9b0303030303030303030303030303030303030303030303030303030346ff8a03030303
% 03030303030303030303030303030303030303030314cdcd140303030324ff460303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 24e7ffff9b030303030378eeee8a1424bcffbc4603030303030303030303039b1403030303030303
% 030303030303030367ffffff350303030303030303030303030303030346ff9b0303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303bc8a0303030303030303030303030303030303030303030303030303030303
% 8aff67030303030303030346ff9b031186daa4d1ffcd7a270606060606060606060606060606cdc0
% ffffdfda38060606bdffbd270606060638ff961da4ffaccdffe9d74a0324cdcd0303030303030303
% 030303030303030303030303030303030303030303030303030303030314579beeffcd8a35030303
% 03030303038add000000000000
% 00ff4603030303030303030303030303030303030303030303030303030303030303030303030303
% 0335ee9b0303030303030303030303030303030303030303030303030303030335eeab0303030303
% 030303030303030303030303030303030303030314cdde14030303030346ff140303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 46bceeffff9b0303030303148aeeee8a1446bcffbc46030303030303030303140303030303030303
% 030303030303030314eeffde0303030303030303030303030303030335ee9b030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303ff670303030303030303030303030303030303030303030303030303030303
% 0303030314abab03030335ee9b0311b0d0daff9c380606060606060606060606060606060606bdd5
% ffe9dada65060617ff8b060606060617dec21da4ff69060627cdf3e6760335ee9b03030303030303
% 030303030303030303030303030303030303030303030303030303030303030303468adeffde8a57
% 030303030335ff330000000000
% 00ff4603030303030303030303030303030303030303030303030303030303030303030303030303
% 35eebc030303030303030303030303030303030303030303030303030303148aeecd140303030303
% 0303030303030303030303030303030303030314cdee3503030303030346ff030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303465714030303030303148aeeee8a1446bcffbc4603030303030303030303030303030303
% 0303030303030303039bff7803030303030303030303030303030335eeab03030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030357ff140303030303030303030303030303030303030303030303030303030303
% 0303030335ffff030314cdcd1411b0c3f2ce3806060606060606060606060606060606060606ffe4
% ff80b4da9406062738060606060606acf02ca5ff6906060606069cffe9670357ff78030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303033578cdff
% ee9b67140303ee770000000000
% 33ff4603030303030303030303030303030303030303030303030303030303030303030303030335
% eecd1403030303030303030303030303030303030303030303030314579beeee7803030303030303
% 03030303030303030303030303030303030303cdee350303030303030346ff030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303148aeede670346bcff9b240303030303030303030303030303
% 03030303030303030357ff24030303030303030303030303030324eecd1403030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303038acd030303030303030303030303030303030303030303030303030303030303
% 030303030378670303b1f3240394d7f0cd170606060606060606060606060606060606060617ffff
% ff265ddab50606060606060606068bff4a96ff69060606060606069cffe63c0378ff570303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030324
% 67abffffab78a8bc0000000000
% 44ff03030303030303030303030303030303030303030303030303030303030303030303030335ee
% cd14030303030303030303030303030303030303030303032478abffffbc78140303030303030303
% 0303030303030303030303030303030303039bee35030303030303030346ff030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303149affde670346cdff9b24030303030303030303030303
% 03030303030303030303bc030303030303030303030303030314cdcd140303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303cd8a030303030303030303030303030303030303030303030303030303030303
% 03030303030303038affff8a77dff2cd17060606060606060606060606060606060606060648ffff
% d21d1ddac1060606060606060648ff8677ff690606060606060606069cf3d72e039bee3503030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030314579beeffff7000000000
% 44ff030303030303030303030303030303030303030303030303030303030303030303030314eecd
% 1403030303030303030303030303030303030303030346bcffee9b57140303030303030303030303
% 03030303030303030303030303030303039bee3503030303030303030346ff030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030314de999bffde670367deff9b2403030303030303030303
% 03030303030303030303140303030303030303030303030314cdcd14030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030335ff46030303030303030303030303030303030303030303030303030303030303
% 0303030303030367ffb8ff90daddce170606060606060606060606060606060606060606068beaff
% b41d1da8d20606060606060617efb377ff690606060606060606060606acf6b61103cdde14030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030352ffad00000000
% 44ff0303030303030303030303030303030303030303030303030303030303030303030314cdcd14
% 0303030303030303030303030303030303030303249bffbc57030303030303030303030303030303
% 030303030303030303030303030303039bff460303030303030303030346ff030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030314cdcd1403249bffde670367deff9b240303030303030303
% 030303030303030303030303030303030303030303030314cdee3503030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303bcbc03030303030303030303030303030303030303030303030303030303030303
% 03030303030314ee8a032ecdc7f0bdac060606060606060606060606060606060606060606acebff
% 6a151b75da06060606060606ace072ff8b06060606060606060606060617dee6a20314ee8a030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303ab9a00000000
% 44ff03030303030303030303030303030303030303030303030303030303030303030314cdcd1403
% 0303030303030303030303030303030303030367eede570303030303030303030303030303030303
% 0303030303030303030303030303039bff67030303030303030303030346ff030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030314cdcd1403030303249bffcd460367deff8a14030303030303
% 03030303030303030303030303030303030303030303039bee350303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030367ff3503030303030303030303030303030303030303030303030303030303030303
% 0303030303038aee1411ccbfff94ffff060606060606060606060606060606060606060606def8ff
% 42131357da3f06060606067aff64efac060606060606060606060606060638ffe4770367ff240303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030378ee00000000
% 44ff030303030303030303030303030303030303030303030303030303030303030314cdcd140303
% 03030303030303030303030303030303030367ff9b03030303030303030303030303030303030303
% 030303030303030303030303030378ff6703030303030303030303030367ff030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030314cdde140303030303030324abffbc460367eeee8a1403030303
% 030303030303030303030303030303030303030303039bee35030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030314ee8a0303030303030303030303030303030303030303030303030303030303030303
% 030303030324ff780377d0f0ac067a59060617591706060606060606060606060606060617ffffff
% 26101037da780606060627ef9695ef170606060606060606060606060606068bffe12003de9b0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030324ff44000000
% 44ff0303030303030303030303030303030303030303030303030303030303030314cdee14030303
% 030303030303030303030303030303030367ff8a0303030303030303030303030303030303030303
% 0303030303030303030303030367ff67030303030303030303030303038acd030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030314cdee350303030303030303030346bcffbc46148aeeee8a140303
% 0303030303030303030303030303030303030303039bff5703030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303038aee140303030303030303030303030303030303030303030303030303030303030303
% 03030303039bde0320daacff170606060606bdff8b06060606060606060606060606060659ffffff
% 1d0a081ddab506060606ace01dc2efbdbdbdbdbdac8b8b484806060606060606cde5860357ff4603
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303cd88000000
% 44ff35030303030303030303030303030303030303030303030303030303030314cdee3503030303
% 0303030303030303030303030303030314ee78030303030303030303030303030303030303030303
% 03030303030303030303030367ff6703030303030303030303030303038abc030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030314cdee350303030303030303030303030346bcffbc46148aeeee8a14
% 030303030303030303030303030303030303030378ff670303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030335ff78030303030303030303030303030303030303030303030303030303030303030303
% 0303030324ff670386c1b1ac0606060606068bff590606060606060606060606060606068bedffad
% 1d04041da8ca06060648ff591d1d8696969696b4c3c1e0ffffff8b060606060638ffeb3c03bcbc03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303038add000000
% 00ff460303030303030303030303030303030303030303030303030303030314cdee350303030303
% 03030303030303030303030303030303032403030303030303030303030303030303030303030303
% 030303030303030303030367ff9b0303030303030303030303030303038abc030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303abee350303030303030303030303030303030346bcffbc24148aeeee
% 7803030303030303030303030303030303030367ff67030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030335eecd03030303030303030303030303030303030303030303030303030303030303030303
% 03030303bccd032eda68ef690606060606060606060627debd0606060606060606060606bdf1ff66
% 1b00001d8fda060606deb31d1d1d1d1d1d1d1d1d1d1d1d1d3b86efce27060606068bf5a90346ff46
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030335ff220000
% 00ff4603030303030303030303030303030303030303030303030303030303bcee35030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030367ff9b03030303030303030303030303030303cd8a030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03031414030303030303039bee350303030303030303030303030303030303030346bcff9b24148a
% eede6703030303030303030303030303030367ff8a03030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030314cdcd1403030303030303030303030303030303030303030303030303030303030303030303
% 03030346ff4603a2a868ff270606060606060606060648ffff0606060606381706060606ffffff38
% 1300001575da4b0659ff3b1d1d1d1d4a7795c1e0954a1d1d1d1d4ad1ef4806060617efe73c03bccd
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303ff550000
% 00ff460303030303030303030303030303030303030303030303030303039bee3503030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030335ee9b0303030303030303030303030303030303ff57030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0314cd9b0303030303039bee350303030303030303030303030303030303030303030367deff9b24
% 249bffde6703030303030303030303030346ff9b0303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0314cdcd140303030303030303030303030303030303030303030303030303030303030303030303
% 0303039bcd033cda4f3bff6906060606060606060606067a480606277a17bd9c06060648ffffff1d
% 0d00001148da8c06bdb31d1d1d3ba4ffefbd8b8bdeffe0961d1d1d2ca4ff690606067affc70335ff
% 35030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303cd880000
% 00ee7803030303030303030303030303030303030303030303030303039bee350303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030335ee9b030303030303030303030303030303030346ff14030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 14cdee2403030303039bff350303030303030303030303030303030303030303030303030367deff
% 9b24249bffde6703030303030303030335ee9b030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03bcee35030303030303030303030303030303030303030303030303030303030303030303030303
% 030303ee780394a81d1d93ef170606060606060606060606060606bdff9dffff9c06068bf3ffba1d
% 0400000d29dac027ff681d1d3bf0de590606060606388bffa41d1d1d1d96ff9c060606deeb4a03de
% 8a030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303039bbc0000
% 00bc8a030303030303030303030303030303030303030303030303039bee35030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030335eeab0303030303030303030303030303030303038acd03030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% abee3503030303039bff670303030303030303030303030303030303030303030303030303030367
% deff9b14249bffde4603030303030335eeab03030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 9bee3503030303030303030303030303030303030303030303030303030303030303030303030303
% 030346ff2403da681d1d2cf0ff8b060606060606060606060606068beee9ffffff6906acf3ff5c18
% 000000081dcdd78be01d1d2cd0cd06060606060606060669ffa31d1d1d1d77efac170669ff80038a
% cd030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030378ee0000
% 0099bc0303030303030303030303030303030303030303030303039bff4603030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030335eecd14030303030303030303030303030303030324ee8a03030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303039b
% ee3503030303039bff67030303030303030303030303030303030303030303030303030303030303
% 0367deee8a14249bffbc4603030324eecd1403030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303030314ab
% ee350303030303030303030303030303030303030303030303030303030303030303030303030303
% 03038acd034ada54e0b2681d86efce3806060606060606060606060669ffffffffff69ffffff2710
% 000000021da8dac1a51d1da4ef270606060606060606060659efa41d1d1d1d4aefce2717f0dd0346
% ff240303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030346ff1100
% 0088cd03030303030303030303030303030303030303030303039bff670303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030314eecd14030303030303030303030303030303030303bccd0303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030367
% 46030303030378ff6703030303030303030303030303030303030303030303030303030303030303
% 0303038aeeee8a1435bcffbc4614cdcd140303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030314cdee
% 35030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303de8a0386aeefacacff951d3bd1ef380606060606060606060617eefffffffffffffffff01d08
% 000000001c82daf0861d4aff5906060606060606060606060638ff771d1d1d1d3bd1ef598bef2e03
% ee780303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303ff4400
% 0055ff030303030303030303030303030303030303030303039bff67030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030314cdcd1403030303030303030303030303030303030378ff350303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030367ff670303030303030303030303030303030303030303030303030303030303030303
% 03030303148aeeee8a1446bcfff2da14030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030314cdee35
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0335ff3503cdcfde170669efd12c2ca4ff690606060606060606060627488b9cbdfffffeffa01d00
% 020c1004156fdaeb591d86de06060606060606060606060606068bef2c1d1d1d1d2ca4ffeeff7703
% 9bcd0303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303de8800
% 0033ff3503030303030303030303030303030303030303038aff6703030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030314cdcd1403030303030303030303030303030303030335ff8a030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030367460303
% 0303030367ff67030303030303030303030303030303030303030303030303030303030303030303
% 030303030303148aeeee8a0352e4ffbc350303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030324cdcd2403
% 03030303030303030303030303030303030303030303038a67030303030303030303030303030303
% 038ade033cdcff6906060638ced12c1da5ff69060606060606060606060606060606c6fbff811d15
% 1d1d1c1d1936dadf681da2bd060606060606060606060606060617deb31d1d1d1d1d1d59c2cab103
% 57ff1403030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303abaa00
% 0000ff460303030303030303030303030303030303030367ff670303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030314cdee2403030303030303030303030303030303030357eecd03030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030367ff8a0303
% 03030367ff7803030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303148aeede670346bcff9b24030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030335eecd140303
% 0303030303030303030303030303030303030303030303bc8a030303030303030303030303030303
% 03bc8a0376cdff170606060617ced12c1da5ff690606060606060606060606060606ffffff771c1b
% 1d1d1d1d1d20dada731dc08b06060606060606060606060606060659ff591d1d2c682c1d1d4fda20
% 03ff6703030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303038acc00
% 0000dd8a03030303030303030303030303030303030367ff67030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0314cdee35030303030303030303030303030303030314abff8a1403030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030335ff9b030303
% 030367ff9b0303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303148affde670346deff9b2403030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030335eecd14030303
% 0303030303030303030303030303030303030303030303ff67030303030303030303030303030303
% 03ff5703a3bdcd06060606060617ced12c1da5ff6906060606060606060606060648ffffff2c1d1d
% 1d1d1d1d1c1d9b755e1dff6906060606060606060606060606060606ace01d59efffff961d1dcd59
% 03bc8a03030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346ff00
% 0000aa9b030303030303030303030303030303030367ff6703030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03abee35030303030303030303030303030303030346deee46de4603030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030335ee9b03030303
% 0367ff9b03030303030303030303030303038abc03030303030303030303ff460303030303030303
% 030303030303030303030303249bffde670367deff9b240303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030346eeab1403030303
% 0303030303030303030303030303030303030303030303ff46030303030303030303030303030303
% 14ff4603dadc8b0606060606060617ded11d1da4ff4806060606060606060606068bf0ffd21d1d1d
% 1d1d1d1d1d1d1d1c1d26ff380606060606060606060606060606060627ff64efac277affa41da876
% 03abab03030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346ff00
% 000088de0303030303030303030303030303030367ff8a0303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 9bee3503030303030303030303030303030303148affab1403ff5703030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303bcbc0303030303
% 35ff9b0303030303030303030303030303038abc03030303030303030303ff460303030303030303
% 0303030303030303030303030303249bffde670367deff9b24030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030367ff9b030303030303
% 0303030303030303030303030303030303030303030303ff46030303030303030303030303030303
% 46ff1411daff48060606060606060638efa41d1da4ef3806060606060606060606cef8ff961d1d1d
% 1d1d1d1d1d1d1e1c1d1dff480606060606060606060606060606060606bdd2ff17060659ffa49b94
% 038abc03030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346ff00
% 000044ff14030303030303030303030303030367ff9b030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303039b
% ee35030303030303030303030303030303359beeee67030303ab9b03030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030314140303030335
% ee9b030303030303030303030303030303038abc03030303030303030303ff460303030303030303
% 03030303030303030303030303030303249bffbc460367deee8a1403030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030367ff9b03030303030303
% 0303030303030303030303030303030303030303030303ff46030303030303030303030303030303
% 67ff033cdaff4806060606060606060648ff961d1dd2ef27060606060606060627ffffff681d1d1d
% 1d1d1d1d1d1d1d1c1c2eff59060606060606060606060606060606060648ffff0606060669ffc1a3
% 0367ff03030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346ff00
% 000000ff570303030303030303030303030367ff9b03030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303039bff
% 67030303030303030303030303030367bcffde7b810303030378ee03030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303140303030303030335ee
% 9b03030303030303030303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff4603030303030303030303030324bcffbc460378eeee8a140303030303030303030303
% 030303030303030303030303030303030303030303030303030303030367ff8a0303030303030303
% 0303030303030303030303030303030303030303030303ff46030303030303030303030303030303
% 8abc034adaff480606060606060606060669ff771d2cd1ce170606060606060669ffffff1d1d1d1d
% 1d1d1d1d1d1d1d1d1c21d08b060606060606060606060606060606060606cfff060606060659ffdc
% 0346ff03030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346ff00
% 000000cc8a03030303030303030303030346ff9b0303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303038aff67
% 030303030303030303030303358adeffab4603bc8a0303030324ff57030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030314cd8a030303030335eeab
% 0303030303030303030303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff46030303030303030303030303030346bcffbc46148aeeee8a14030303030303030303
% 0303030303030303030303030303030303030303030303030303030367ff8a030303030303030303
% 0303030303030303030303030303030303030303030303ff46030303030303030303030303030303
% 9bbc0376a7ff4806060606060606060606068bef4a1d3befac060606060606069cf5ffb41d1d1d1d
% 1d1d1d1d1d1d1d1d1d1eb2ac06060606060606060606060606060606060673ff480606060617ffe6
% 0324ff46030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346ff00
% 00000088bc030303030303030303030335ee9b030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030367ff6703
% 0303030303030303030303bcffde8a2403038affbc0303030303cd9b030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303bcee350303030335eecd14
% 0303030303030335240303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff460303030303030303030303030303030346bcffbc46148aeeee8a1403030303030303
% 03030303030303030303030303030303030303030303030303030335ff9b03030303030303030303
% 0303030303030303030303030303030303030303030303ff46030303030303030303030303030303
% bc8a0376a8ff48060606060606060606060606bde02c1d4aff8b060606060606f2ffff771d1d1d1d
% 1d1d1d1d1d1d1d1e1d1d71bd06060606060606060606060606060606060606f17a0606060606bdee
% 0303ff46030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346ff00
% 00000066ff0303030303030303030335ee9b03030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030367ff670303
% 030303030303030303030357350303030346ffffbc030303030378ee240303030303030303030303
% 030303030303030303030303030303030303030303030303030303039bee350303030335eecd1403
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff4603030303030303030303030303030303030346bcffab24148aeeee67030303030303
% 030303030303030303030303030303030303030303030303030335ee9b0303030303030303030303
% 0303030303030303030303030303030303030303030303ff57030303030303030303030303030303
% bc8a0376a8ff4806060606060606060606060617efb31d1d77ff590606060648ffffff2c1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d59ff06060606060606060606060606060606060606d3ac0606060606bdee
% 0303ff46030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346ff33
% 00000022ff35030303030303030335ee9b0303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030367ff8a030303
% 03030303030303030303030303030303039bffffbc030303030314cdcd1403030303030303030303
% 0303030303030303030303030303030303030303030303030303039bff350303030314decd140303
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff46030303030303030303030303030303030303030346cdff9b24148affde6703030303
% 0303030303030303030303030303030303030303030303030324eecd030303030303030303030303
% 0303030303030303030303030303030303030303030303cd8a030303030303030303030303030303
% bc8a0376a8ff480606060606060606060606060648ff861d1da4ef270606068bf6ffc31d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1db6fd380606060606060606060606060606060606067aff2706060606bdee
% 0303ff46030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346ff44
% 00000000dd780303030303030335eebc030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030367ff9b03030303
% 030303030303030303030303030303030303b1a47803030303030314decd14030303030303030303
% 0303030303030303030303030303030303030303030303030303039b670303030314cdcd14030303
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff460303030303030303030303030303030303030303030367deff9b24249bffde670303
% 03030303030303030303030303030303030303030303030303cdcd14030303030303030303030303
% 0303030303030303030303030303030303030303030303bc8a030303030303030303030303030303
% bc8a0376a8ff6906060606060606060606060606067aff4a1d2cd1cd060606e2ffff861d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1db4dd8b06060606060606060606060606060606060606ee9c06060606bdee
% 0303ff46030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346ff11
% 0000000099bc03030303030335eecd14030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030346ff9b0303030303
% 0303030303030303030303030303030303032403030303030303030335eecd571403030303030303
% 144646464624030303030303030303030303030303030303030303030303030314cdcd1403030303
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff4603030303030303030303030314ab0303030303030303030367deff9b24249bffde67
% 03030303030303030303030303030303030303030303030378ff2403030303030303030303030303
% 03030303030303030303030303030303030303030303038abc030303030303030303030303030303
% 9bbc0376a7c18b060606060606060606060606060606bdd11d1d4aef8b0638ffffff3b1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1c1db4ccde06060606060606060606060606060606060606b8f227060606bdf3
% 0324ff46030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030378ee00
% 0000000055ff140303030335eecd1403030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030335ee9b030303030303
% 030303030303030303030303030303030303030303030303030303030335bcffffcd8abcbcbccdff
% ffffffffffffee78030303030303030303030303030303035714030303030314cdde140303030303
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff4603030303030303030303030303ab24030303030303030303030367deff8a14249bff
% cd4603030303030303030303030303030303030303030314ee8a0303030303030303030303030303
% 03030303030303030303030303030303030303030303038acd030303030303030303030303030303
% 8abc034adac29c06060606060606060606060606060627ef951d1d96ff388bf7ffd21d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1c1db4daf83806060606060606060606060606060606060617f5df270606cdee
% 0346ff03030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303038abc00
% 0000000011ff5703030314eecd140303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030335ee9b03030303030303
% 0303030303030303030303030303030303672403030303030303030303030314578abc9b8a8a8a57
% 4614030303468affbc240303030303030303030303030346ff8a0303030314cdee35030303030303
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff460303030303030303030303030378670303030303030303030303030367deee8a1424
% 9bffbc46030303030303030303030303030303030303039bde140303030303030303030303030303
% 030303030303030303030303030303030303030303030357ff030303030303030303030303030303
% 67ff033cda9cbd060606060606060606060606060606067aff4a1d1dd1bde2ffd2451d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d25dadadc8b06060606060606060606060606060606060606b7ed8b0606ffc2
% 0367ff03030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303bc8900
% 0000000000cc8a030314cdcd14030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030335eecd0303030303030303
% 03030303030303030303030303030303037835030303030303030303030303030303030303030303
% 0303030303030335cdee14030303030303030303030335ee9b0303030314cdee3503030303030303
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff4603030303030303030303030303248a0303030303030303030303030303148aeeee8a
% 1446bcffbc460303030303030303030303030303030346ff57030303030303030303030303030303
% 030303030303030303030303030303030303030303030346ff140303030303030303030303030303
% 46ff1411daadce0606060606060606060606060606060606bdd11d1d4affffe12b1c1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d8fdad5ce0606060606060606060606060606060606060669f9ac0638ffa9
% 038abc03030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303ee7700
% 000000000088de0314cdcd1403030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030335eecd140303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030314ee670303030303030303141435eeab0303030303abee350303030303030303
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 03030303ff4603030303030303030303030303468a03030303030303030303030303030303148aee
% ee8a1446bcffbc460303030303030303030303030303cdbc03030303030303030303030303030303
% 030303030303030303030303030303030303030303030314ff670303030303030303030303030303
% 14ff4603da9aff060606060606060606060606060606060627ff771d1dc2ab241c1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d4fdadaf02706060606060606060606060606060606060617f8bd0659ff76
% 03abab03030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030314ff4400
% 000000000033ff24149b140303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030314cdcd14030303030303030303
% 03030303030303030303030303030303140303030303030303030303030303030303030303030303
% 0303030303030303039bde030303030303030367cdf2cd14030303039bee35030303030303030303
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 03031446ce6b35030303030303030303030303468a03030303030303030303030303030303030314
% 8aeeee780346bcffbc24030303030303030303030324ff4603030303030303030303030303030303
% 030303030303030303030303030303030303030303030303bc9b0303030303030303030303030303
% 03ff6d03a3a3ff2706060606060606060606060606060606069ce02c1d461d1c1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1dc1dadb9c06060606060606060606060606060606060606d1d306ace659
% 03bc8a03030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030346ff1100
% 000000000000ee780303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030314cdcd1403030303030303030303
% 03030303030303030303030303030303cd5703030303030303030303030303030303030303030303
% 03030303030303030324ff6703030303030303cdfff142030303039bee3503030303030303030303
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 030303eeffff78030303030303030303030303577803030303030303030303030303030303030303
% 03148aeede670346bcff9b2403030303030303030378ee0303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030378ee0303030303030303030303784603
% 03e0a90376b4ff48060606060606060606060606060606060617ef961d301d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d75dadae91706060606060606060606060606060606060685ff27ffe920
% 03ff6703030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030378ee0000
% 00000000000099cd0335030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030314cdcd140303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303bc8a03030303030346ffffff8a0303039bff350303030303030303030303
% 03030303030303bc8a0303030303030303038abc03030303030303030303ff460303030303030303
% 0303039bffff240303030303030303030303039b2403030303030303030303030303030303030303
% 030303149bffde670357deff9b2403030303030303abab0303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030335ff350303030303038a570303573503
% 038ade033cdad48b0606060606060606060606060606060606068be0251d1d251d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d2acddae08b06060606060606060606060606060606060617ffeef5b603
% 57ff1403030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303039bbc0000
% 00000000000055ff24ffbc2403030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030314cdee35030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030335350303030303039bff9b240303039bff67030303030303030303030303
% 03030303030303bc8a030303030303030367b9c98a14030303030303358ae0a14603030303030303
% 03030357ffbc03030303030303030303030314bc0303030303144646463503030303030303030303
% 0303030303249bffde670367deff9b240303030303ee670303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303e09203039b78030335240303030303
% 0335ff3503cdcfac06060606060606060606060606060606060627ff431c1c321d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d82dadadd06060606060606060606060606060606060606a3f0cd7703
% 9bcd0303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303ee770000
% 00000000000000ee6746cdff8a030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303cdee3503030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030324ab24030303039bff6703030303030303030303030303
% 03030303030303bc8a030303030303030378ffffde0303030303030324ffffff3503030303030303
% 03030303de670303030303030303030303039b460303030346ffffffffff57030324030303030303
% 030303030303247b9bffde570367deff9b14030346ff240303030303030303030303030303030303
% 03030303030303030303030303030303030303030314240303d1e803031414030303030303030303
% 0303de8a0386cbef06060606060606060606060606060606060606ff3f1c1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d2acddae46906060606060606060606060606060606060648ffdf2e03
% ee780303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030357ff220000
% 0000000000000099ab030378eede4603030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303039bee350303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030378ff670303030303030303030303030303
% 03030303030303bc8a030303030303030314ffff8a0303030303030303abffde0303030303030303
% 030303038a14030303030303030303030346ab35bcde0303034603030324140303cdee7803030303
% 0303030303039b4603249bffbc460367deee8a1446ff030303030303030303030303030303030303
% 030303030303030303030303030303030335570303678a030346ff24030303030303030303030303
% 03038acd034adfff48060606060606060606060606060606060638ff821d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d82dadad006060606060606060606060606060606060606ffd00335
% ff240303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303038acc000000
% 0000000000000066ff14030324abff9b140303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303039bee35030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030367ff67030303030303030303030303030303
% 030303030303bcd7ce8a0303030303030303abff35030303030303030367ff8a0303030303030303
% 0303030303030303030303030303030303c19affcd5703030303c9410303030303248affcd350303
% 030303030335bc0303030335bcffbc46038aeeee8a14030303030303030303030303030303030303
% 0303030303030303030303030346780303577803030303030303de8a030303030303030303030303
% 030346ff2403dae78b06060606060606060606060606060606069cfb961d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d2acddae448060606060606060606060606060606060648ff89038a
% cd030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303de77000000
% 0000000000000011ff670303030357deee6703030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303039bff4603030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030367ff6703030303030303030303030303030303
% 030303030303abffff8a030303030303030367cd03030303030303030314ff240303030303030303
% 0303030303030303030303030303030399edee78030303030303ff770303030303030335bcff4603
% 0303030303bc2403030303030346bcffbc46148aeeee8a1403030303030303030303030303030303
% 030303030303030303578a03033557030303030303030303030378ee030303030303030303030303
% 030303ee780394d7de0606060606060606060606060606060627ffffc61d1c1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d82dadac506060606060606060606060606060606069ce74a03de
% 8a030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030335ff33000000
% 0000000000000000aaab0303030303148affbc240303030303030303030303030303030303030303
% 03030303030303030303030303030303030303039bff67030303359b672403030303030303030303
% 03030303030303359b0303030303578a780303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030367ff780303030303030303030303030303030303
% 03030303030367ffff24030303030303030314670303030303030303030378030303030303030303
% 03030303030303030303030303030314bc8a1403030303030303ff77030303030303030303570303
% 030303039b8a03030303030303030346bcffbc46148aeeee8a140303030303030303030303030303
% 030324030357bc0303144603030303030303030303030303030314ff670303030303030303030303
% 0303039bcd033cdfff590606060606060606060606060606069cfbffba1d1c1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d2acddae16906060606060606060606060606060617f0dc0335ff
% 35030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303038add00000000
% 000000000000000066ff1403030303030335cdff8a14030303030303030303030303030303030303
% 0303030303030303030303030303030303030378ff670303030303bc460303030303030303030303
% 0303030303030303bc0303030303ab03030303030303030303030303030367030303030303030303
% 0303030303030303030303030303030303030367ff9b030303030303030303030303030303030303
% 03030303030314eecd03030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303149b46030303030303030303ff77030303030303030303030303
% 4614039b9b03030303030303030303030346bcff9b24148aeede6703030303030303030303033503
% 0335cd0303032403030303030303030303030303030303030303039bbc0303030303030303030303
% 03030346ff4603a2e2ac060606060606060606060606060638ffffff771d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d75dadadc0606060606060606060606060606069cf84903abcd
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303de8800000000
% 000000000000000011ee67030303030303030378eede460303030303030303030303030303030303
% 03030303030303030303030303030303030367ff67030303030303bc460303030335462403032446
% 2403032457140303bc0303030335cd463546242403245714030324462446bc461435460346350335
% 46242403465724144646240303030303030367ff9b03030303030303030303030303030303030303
% 030303030303039b7803030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030357efd303030303030303030303ff77030303030303030303030303
% dec0ab9b03030303030303030303030303030346deff9b24148affde67030303031478030335bc03
% 03030303030303030303030303030303030303030303030303030346ff2403030303030303030303
% 03030303bccd032ee6ff2706060606060606060606060606d0fbffe11d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1dc1dadc710606060606060606060606060669ffc20346ff46
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030357ff2200000000
% 00000000000000000099bc03030303030303030324abffab14030303030303030303030303030303
% 030303030303030303030303030303030367ff6703030303030303bc460303034667037846468a03
% ab033578039b0303bc0303030303bc0303de35573578039b03468a03ab03bc030303bc03468a0303
% de35575767039b8a03144603030303030335ff9b0303030303030303030303030303030303030303
% 03030303030303461403030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030324eebc7803030303030303030303ff90030303030303030303030303
% 85ffa903030303030303030303030303030303030367deff9b24249bffe0c20303248a0303030303
% 03030303030303030303030303030303030303030303030303030303de8a03030303030303030303
% 0303030324ff670386f0ac0606060606060606060606067affffff591d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d4fdadadc06060606060606060606060638f0e73c03bcbc03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303abbb0000000000
% 00000000000000000055ff240303030303030303030357deee780303030303030303030303030303
% 0303030303030303030303030303030367ff8a0303030303030303bc46030324ab1403469b9b4603
% 0303035746bc0303bc0303030303bc0303bc0303035746bc039b46030303bc030303bc03468a0303
% bc0303ab57468a57bc8a14030303030335ee9b030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 350303030303030303030303bccda13503030303030303030303ffa90303030303030303030367cd
% 8a81ff350303030303030303030303030303030303030367deffde2424a2ffde6703030303030303
% 0303030303030303030303030303030303030303030303030303030378ee03030303030303030303
% 03030303039bde0320e6ff480606060606060606060638f3ffffa51d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d9bdada8d0606060606060606060617ceeb860357ff4603
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030324ff660000000000
% 00000000000000000000ee780303030303030303030303148affbc35030303030303030303030303
% 03030303030303030303030303030367ff9b030303030303030303bc460303579b3503468a8a4603
% 1403676703bc2403bc0303030303bc0303bc0303676703bc248a46031403bc033503bc03468a0303
% bc03039b3503145703468a0303030335ee9b03030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 78bc9b57140303030303038aff35bc0303030303030303030303ffa9030303030303030346bc7803
% 0303abde140303030303030303030303030324030314de140367ebff8a14249bffbc460303030303
% 0303030303030303030303030303030303030303030303030303030314ff67030303030303030303
% 030303030324ff780377ebce06060606060606060606d0f9fff02c1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d36dadade170606060606060606069cf3df2003de9b0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030378ee000000000000
% 0000000000000000000088cd0303030303030303030303030335bcff8a1403030303030303030303
% 030303030303030303030303030335ee9b03030303030303030335cd78468a8a2478467814148a46
% 6703578a35ab4635de2403030335de3535de3503578a35ab46148a4667039b5724038a3557ab1435
% de3503147846579b35465703030335eeab0303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03033578bcbc9b8a4624038a7803ab0303030303030303030303ffa9030303030303038aab240303
% 030314671403030314780303030335030303ee140303240303030367eeee8a1424abffbc46030303
% 03030303030303030303030303030303030303030303030303030303039bcd030303030303030303
% 0303030303038aee1411d3ff8b06060606060606068bf8ffff771d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d82dadab506060606060606067affda770367ff240303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303ab99000000000000
% 0000000000000000000033ff35030303030303030303030303030378eede46030303030303030303
% 0303030303030303030303030335ee9b030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030335eecd140303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030324468a9bbcbc9b67b60303030303030303030324ffa90303030303039b9b03030303
% 0303030303030367eeff67140303de24030303030303030303030303148aeeee8a1446bcffbc4603
% 030303030303030303030303030303030303030303030303030303030357ff240303030303030303
% 03030303030314ee8a032ee4ff4806060606060648ffffffc31d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1db4dada5806060606060638ffe8a20314ee8a030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303ff66000000000000
% 0000000000000000000000dd8a03030303030303030303030303030314abffab2403030303030303
% 03030303030303030303030335eeab03030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030335eecd14030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303032467d2ab24030303030303030346ff9903030303039b9b0303030303
% 030303030324bcffffffb524030303030303030303030303030303030303148aeeee8a1446bcffbc
% 460303030303030303030303030303030303030303030303030303030303ee780303030303030303
% 0303030303030367ff670359ebef380606060617f0fafff02c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d43dadad4060606060606cee5b11103cdde14030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030357ff11000000000000
% 000000000000000000000088ee030303030303030303030303030303030346deee78030303030303
% 030303030303030303030335eecd1403030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030314decd1403030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303672403030346bc780303030303030346ffab0303030357e4bcabbc783503
% 03030303b1a19bbceeff78030303030303030303030303030303030303030303148aeeee670346bc
% ffab240303030303030303030303030303030303030303030303030303039bab0303030303030303
% 03030303030303038aff350380efde17060606bdf7ffff681d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d82dadaa5060606069cf4d42e039bee3503030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303038acc00000000000000
% 000000000000000000000022ff570303030303030303030303030303030303148affcd3503030303
% 0303030303030303030314eecd140303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030314cdcd140303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303ff5703030303039b6703030303030346ffbc03030314cd14030303579bcd
% 46030303de8a03030303240303030303030303030303030303030303030303030303148aeede6703
% 46bcff9b240303030303030303030303030303030303030303030303030367ff1403030303030303
% 030303030303030303abee14039bedce17068bffffff961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1db4dada4b06068bffe63c0378ff570303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303cd8800000000000000
% 000000000000000000000000aaab0303030303030303030303030303030303030335bcff8a140303
% 03030303030303030314cdcd14030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030314cdcd14030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303ff46030303030303cd35030303030346ffbc0303038a5703030303030314
% 9bbc2403bc8a030303030303030303030303030303030303030303030303030303030303249bffde
% 670367deff9b24030303030303030303030303030303030303030303030314ff5703030303030303
% 03030303030303030314cdcd1411b5e9ce59ffffffd22c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d43cedad8629cffe9670346ff78030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030314ff5500000000000000
% 00000000000000000000000066ff24030303030303030303030303030303030303030367eede5703
% 030303030303030314cdcd1403030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030314cdde1403030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303ff4603030303030314cd140303030367ffbc030346ab0303030303030303
% 0335bc78bc8a0303030303030303030303030303030303030303030303030303030303030303249b
% ffde670367deff9b2403030303030303030303030303030303030303030303bc8a03030303030303
% 0303030303030303030335ee9b0311b5edfff5fff04a1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d68dadae6d5e6760335ee9b03030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030346ff1100000000000000
% 00000000000000000000000000ee78030303030303030303030303030303030303030303149bffab
% 2403030303030314cdee140303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030314cdee350303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303ff4603030303030303678a030303038adbee0303bc140303030303030303
% 0303038aed9a03030303030303030303030303030303030303030303030303030303030303030303
% 249bffde460367deff8a1403030303030303030303030303030303030303038abc03030303030303
% 030303030303030303030346ff9b0311c7fdffff861d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d9bdad8cf4a0324cdcd1403030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303038acc0000000000000000
% 0000000000000000000000000088de030303030303030303030303030303030303030303030346de
% ee780303030314cdee35030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030314cdee35030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303de8a0303030303030303bc03030303abc1ff03469b030303030303030303
% 03030303bcce9b350303030335784603030303030303030303030303030303030303030303030303
% 0303249bffbc460367deee8a140303030303030303030303030303030303038ade03030303030303
% 03030303030303030303030367ffab24b6ffffda1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d4dd0c32e0346eecd140303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303bc990000000000000000
% 0000000000000000000000000033ff46030303030303030303030303030303030303030303030303
% 8affcd350303abee3503030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303abee3503030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303240303030303030303038a67030303cda1ff359b24030303030303030303
% 030303030303359b9babbcbc8a570303030303030303030303030303030303030303030303030303
% 0303030346bcffbc46148aeeee8a140303030303030303030303030303030346ff03030303030303
% 0303030303030303030303030335eed02435cfd0b4361d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d5ccdb0110367ff9b14030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303ff660000000000000000
% 0000000000000000000000000000cc9b030303030303030303030303030303030303030303030303
% 0324bcff8aa2ee350303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303039bee350303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030314cd030303ff57ff5fbc03030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030346bcffbc46148aeeee8a14030303030303030303030303030335ff35030303030303
% 030303030303030303030303030324cdee35032ebecd822a1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d4fa8da8503039bff8a0303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030335ff220000000000000000
% 000000000000000000000000000066ff140303030303030303030303030303030303030303030303
% 03030367f8fe78030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303039bee35030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303031403030303030303038a350324ff46eec04603030303030303030303
% 03030378140303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030346bcffbc35148aeeee8a0303030303030303030303030303ff46030303030303
% 03030303030303030303030303030314abff67030376cdcd751d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d368fdaa33c0314bcee67030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030378ee000000000000000000
% 000000000000000000000000000011ee780303030303030303030303030303030303030303030303
% 0303039bffc2ffbc2403030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303039bff3503030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303abde1403030303030303468a0346ff1dc3e80303030303030303030303
% 030378ff240303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030346bcff9b24148aeede67030303030303030303030303de78030303030303
% 03030303030303030303030303030303038affab24031177dac1681d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2a8fdabf3c030346deee3503030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03039bbb000000000000000000
% 00000000000000000000000000000099cd0303030303030303030303030303030303030303030303
% 03038aff670346deee8a030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03039bff670303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030314ee9b0303030303030303cd038adf1dabd30303030303030303030303
% 0335ff8a030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030357deff9b24149bffde6703030303030303030303bc8a030303030303
% 03030303030303030303030303030303030357deee8a14032086dab482431d1d1d1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d1d1d1d2a688fcdbf59030346bcff9b140303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303cd88000000000000000000
% 00000000000000000000000000000033ff3503030303030303030303030303030303030303030303
% 0367ff67030303038aeecd4603030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 039bff67030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030357ff67030303030303039b358abf1d84ee0303030303030303030303
% 14debc03030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030367deff9b24249bffde670303030303030303de8a030303030303
% 03030303030303030303030303030303030303038aeeee8a03032076bfdac18f5c1d1d1d1d1d1d1d
% 1d1d1d1d1d1d1d1d1d1d36689bdada9467110324abffbc4603030303030303030303030303030303
% 030303030303030303030303030303030303030303038a1403030303030303030303030303030303
% 0303ff55000000000000000000
% 00000000000000000000000000000000cc9b03030303030303030303030303030303030303030303
% 67ff6703030303030324bcff8a140303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 78ff6703030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303038aee350303030303035778bc931d4aff2403030303030303030303
% 9bee1403030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030367deff9b24249bffde57030303030303ff8a030303030303
% 030303030303030303030303030303030303030303148aeede670303032e68b1dacda882754f361d
% 1d1d1d1d1d4f5c8282b4dacd8759110303149bffde46030303030303030303030303030303030303
% 0303030303030303030303030303030303030303039bee3503030303030303030303030303030303
% 0346ff22000000000000000000
% 0000000000000000000000000000000066ee14030303030303030303030303030303030303030367
% ff7803030303030303030357eeee5703030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030367
% ff670303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303ab3503030303030303c1ff751d1dff6703030303030303030303
% 35350303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030367deee8a14249bffbc4603030303ff67030303030303
% 0303030303030303030303030303030303030303030303249bffde8a57030303205985a3ccdadada
% dadadadadadadab1a2764a0303032467abffde670303030303030303030303030303030303030303
% 0303030303030303030303030303030303030324bcee350303030303030303030303030303030303
% 0378ee00000000000000000000
% 0000000000000000000000000000000011ee780303030303030303030303030303030303030367ff
% 9b0303030303030303030303148affbc240303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303030367ff
% 67030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303b8ff2c1d1dc39c03030303030303141403
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030378eeee8a1424bcffbc460303ff46030303030303
% 03030303030303030303030303030303030303030303030303248acdffee9b571403030303032e3c
% 3c3c3c3c3c2003030303032478cdffeeab6714030303030303030303030303030303030303030303
% 03030303030303030303030303030303030357eede35030303030303030303030303030303030303
% 038abb00000000000000000000
% 000000000000000000000000000000000099de03030303030303030303030303030303030346ff9b
% 030303030303030303030303030346cdff8a03030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030367ff78
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303bcab24030303ab9e1d1d1d86ee03030303030378ee8a03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303148aeeee8a1446bcffbc46ff46030303030303
% 030303030303030303030303030303030303030303030303030303032478abffffab8a7846240303
% 03030303030346468a8adeffde9b5703030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030314abff8a1403030303030303030303030303030303030303
% 03bc8800000000000000000000
% 000000000000000000000000000000000033ff460303030303030303030303030303030335ee9b03
% 030303030303030303030303030303038aeede460303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030367ff9b03
% 030303469b6714030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030346deee8a0324ff631d1b1d3bff3503030335bcff8a1403
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303148aeeee8a1446bcffff77030303030303
% 0303030303030303030303030303030303030303030303030303030303030314679bbceeffffffde
% bcbcbcbceeffffffcdbc8a3503030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030346eede46030303030303030303030303030303030303030303
% 03ff5500000000000000000000
% 000000000000000000000000000000000000bb9b03030303030303030303030303030335ee9b0303
% 030303030303030303030303030303030324bcff9b14030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030367ffeb1403
% 03030346bcffffbc0303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303038affde93ef1a1d1d1d1ace8a030367ffbc35030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303148aeede67035fe0ff9b2403030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030346468a
% 8a8a8a8a674624030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303148affab1403030303030303030303030303030303030303030303
% 35ff2200000000000000000000
% 00000000000000000000000000000000000066ff140303030303030303030303030335eecd030303
% 0303030303030303030303030303030303030357deee670303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030335ffafeeab14
% 03030303030357670303cd9b67240303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303032478d0a01d1d1d1d1db7f8140324570303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303148affde670346cdff9b240303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303248adeee57030303030303030303030303030303030303030303030303
% 67ff0000000000000000000000
% 00000000000000000000000000000000000000ee8a03030303030303030303030335eecd14030303
% 0303030303030303030303030303030303030303148affbc24030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030335ee9b0335eecd
% 3503030303030303030378abffff5703140303030324030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030324ff571d241d2b1d2bf1670303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303249bffde670367deff9b24
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303469bffee8a1403030303030303030303030303030303030303030303030303
% 8abc0000000000000000000000
% 0000000000000000000000000000000000000088de030303030303030303030314cdcd1403030303
% 0303030303030303030303030303030303030303030335cdff8a0303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030335ee9b03030324cd
% ee67030303030303030303030357240378eeab6733ee780303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303039bde1d1d1d1d1f1c1da3de0303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303249bffde670367deff
% 9b240303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303031467deffbc6703030303030303030303030303030303030303030303030303030303
% bc880000000000000000000000
% 0000000000000000000000000000000000000022ff5703030303030303030314cdcd140303030303
% 03030303030303030303030303030303030303030303030378eede46030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030335eeab030303030303
% 8aff9b140303030303030303030303032467abeeebffffab14030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030352ff7a1d1d1d1d1d1f1f3eff7203030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303249bffcd460367
% deff8a14030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303248aeeff9b35030303030303030303030303030303030303030303030303030303030303
% ff660000000000000000000000
% 0000000000000000000000000000000000000000bbab030303030303030314cdcd14030303030303
% 0303030303030303030303030303030303030303030303030324abff9b1403030303030303030303
% 03030303030303030303030303030303030303030303030303030303030335eecd14030303030303
% 0357eecd57030303030303030303030303030303afffffffee460303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030378cfffdb1d1d1d1d1e1d1d1d1dbfffd2780303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030324abffbc46
% 0367eeee8a1403030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 24578acdffde78140303030303030303030303030303030303030303030303030303030303030324
% ff330000000000000000000000
% 000000000000000000000000000000000000000066ff2403030303030314cdee3503030303030303
% 03030303030303030303030303030303030303030303030303030357deee78030303030303030303
% 030303030303030303030303030303030303030303030303030303030335eecd1403030303030303
% 030324bcffde8a24030303030303030303030303788a574646350303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030314c0ffceff4b1d1d1d1f1d1d1d1d1d2cf3d3ffc024030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030346bcff
% bc46148aeeee8a140303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303034678abde
% ffffcd8a570303030303030303030303030303030303030303030303030303030303030303030357
% ff000000000000000000000000
% 000000000000000000000000000000000000000000ee8a030303030303cdee350303030303030303
% 03030303030303030303030303030303030303030303030303030303148affbc3503030303030303
% 0303030303030303030303030303030303030303030303030303030314decd140303030303030303
% 03030303248adeffbc67030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303035bf1e474f5961d1d1d1d221d1d1d1d1d1d86ff7cd7f17d0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030346
% bcffbc46148aeeee8a14030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303032446578a8acdffffdeab78
% 4603030303030303030303030303030303030303030303030303030303030303030303030303038a
% cc000000000000000000000000
% 00000000000000000000000000000000000000000088de03030303039bee35030303030303030303
% 03030303030303030303030303030303030303030303030303030303030335cdff8a140303030303
% 03030303030303030303030303030303030303030303030303030314cdcd14030303030303030303
% 0303030303030357abffefb68a574614030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030314afffa15adaea2c1d1d1d1d1d1d1d1d1d1d1d1ddde65ca1ffc024
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0346bcffbc24148aeeee780303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030314464646788a8abcbcffffffffffcdbc8a5724030303
% 030303030303030303030303030303030303030303030303030303030303030303030303030303bc
% 99000000000000000000000000
% 00000000000000000000000000000000000000000022ff570303039bee3503030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030378eede4603030303
% 030303030303030303030303030303030303030303030303030314cdcd1403030303030303030303
% 03030303030303030314aefbd0ffffffffcdbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc9b8a8a46
% 24030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030346f0e46a91f0d2471d1d1d1d1d1d1d1d1d1d1d1d1d39c3ff9e5cd7f0
% 67030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030346bcff9b24148aeede67030303030303030303030303030303030303030303030303030303
% 030303030303033546678a8abcbcbcffffffffffffffeebcbc8a8a67464603030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303030303de
% 77000000000000000000000000
% 00000000000000000000000000000000000000000000aaab03039bff460303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030314abffab140303
% 0303030303030303030303030303030303030303030303030314cdee140303030303030303030303
% 0303030303030303030314ee78031446578a8abcbcbc8a8a8a8a8a8a8a8a8a8a8a8a8a8abcbcdeff
% ff9b3503030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030314f0bc5ac8ff961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d86ffd55cae
% f0240303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030367deff9b24249bffde6703030303030303030303030303030303030303030303030303
% 24678abcbcffffffffffbcbc8a8a8a78464646140303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303030314ff
% 44000000000000000000000000
% 0000000000000000000000000000000000000000000066ff2424ee67030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030346deee7803
% 03030303030303030303030303030303030303030303030314cdee35030303030303030303030303
% 03030303030303030303038aee140303030303030303030303030303030303030303030303030303
% 67cdffbc460303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303afe45af1d24a1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d4ad2ff67
% d7c00303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030367deff9b24249bffde670303030303030303030303030303030303030324679bde
% ffffbc8a8a6746350303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303030346ff
% 11000000000000000000000000
% 0000000000000000000000000000000000000000000000ee8a031403030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303148affbc
% 350303030303030303030303030303030303030303030314cdee3503030303030303030303030303
% 030303030303030303030314ee9b0303030303030303030303030303030303030303030303030303
% 030346bcff8a03030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303035bff6ac8e12c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1dd2d5
% 5cff7d03030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030367deff9b14249bffde460303030303030303030303030303578adeffffbc8a
% 46030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303038add
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000088de030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303030335bc
% ff8a140303030303030303030303030303030303030303abee350303030303030303030303030303
% 03030303030303030303030357ff4603030303030303030303030303030303030303030303030303
% 0303030367ff57030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030314f0a191ff591d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d4aff
% 9ea1f124030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030367deee8a14249bffbc460303030303030303030367deffbc8a46030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303abaa
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000022ff460303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 78eede570303030303030303030303030303030303039bee35030303030303030303030303030303
% 03030303030303030303030303abde14030303030303030303030303030303030303030303030303
% 03030303039bee240303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303b0e45af0961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d96
% ff5cd7c0030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303248a8aeeee8a1435bcffbc4603030303030367deff9b24030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303de88
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000cc9b0303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0314abffab240303030303030303030303030303039bee3503030303030303030303030303030303
% 0303030303030303030303030324ee8a030303030303030303030303030303030303030303030303
% 030303030303cdcd0303030303030303030303030303030303030303030303030303030303030303
% 030303030303030357ff6ac7d21d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% c3d55cff780303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030346ff03148aeeee8a1446bcffbc46030357deff9b240303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030314ff44
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000066ee1403030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030346deee78030303030303030303030303039bff460303030303030303030303030303030303
% 030303030303030303030303030378ff350303030303030303030303030303030303030303030303
% 03030303030324ff5703030303030303030303030303030303030303030303030303030303030303
% 0303030303030303bfae85ff4a1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 3bf0a1a1cf0303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030378ee030303148aeeee8a0346bcffbca1ffab2403030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030346ff11
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000011ff6703030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303038affcd35030303030303030303039bff67030303030303030303030303030303030303
% 030303030303030303030303030303bccd0303030303030303030303030303030303030303030303
% 030303030303038a3503030303030303030303030303030303030303030303030303030303030303
% 0303030303030303ff85c8a51d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d96d577ff1403030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303038abc0303030303148aeede670346bcffc3240303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303038add00
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000099cd03030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030324bcff8a14030303030303039bff6703030303030303030303030303030303030303
% 03030303030303030303030303030324ee9b03030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030346ff4fff771d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d68ff41ff6703030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303bc8a03030303030303148affde670346deff9b24030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303abaa00
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000044ff24030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030367eede57030303030378ff670303030303030303030303030303030303030303
% 0303030303030303030303030303030335ff9b030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303038bd76aff2c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1dff85c99f03030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303ff67030303030303030303249bffde670367deff9b2403030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303de8800
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000dd8a030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303149bffab24030367ff67030303030303030303030303030303030303030303
% 030303030303030303030303030303030367ff9b0303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303cfa1a1d21d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1dc3ada1df03030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030324ff460303030303030303030303249bffde670367deff9b240303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030314ff4400
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000077ee030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030346deee8a67ff6703030303030303030303030303030303030303030303
% 03030303030303030303030303030303030367ff9b03030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303ff77c8961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d86e35cff24030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303abee0303030303030303030303030303249bffbc460367deee8a14030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030346ff0000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000011ff670303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303038affffa90303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030367ff67030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303ff6ac7961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d59ff34ff46030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030378ff460303030303030303030303030303030324bcffbc460378eeee8a1403
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303038acc0000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000099bc0303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030367ffe4ff8a14030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030367ff670303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303ff6ac7961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d59ff34ff46030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030335ee8a0303030303030303030303030303030303030346bcffbc46148aeeee8a
% 14030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303ab990000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000044ff2403030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030367ff9b0367eeee570303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030367ff6703030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303ff6ac7961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d59ff34ff46030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303031467abffcd0303030303030303030303030303030303030303030346bcffbc46148aee
% ee8a1403030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030303ee770000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000dd8a03030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030335ff9b030303148affbc24030303030303030303030303030303030303
% 030303030303030303030303030303030303030303038aff8a030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303ff77c8961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1d96e36aff24030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030335788a8ac5c9bc
% bcbcbcbcffffffab671403030303030303030303030303030303030303030303030346bcffab2414
% 8aeeee67030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030324ff330000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000077ee03030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030335ee9b03030303030346cdee8a0303030303030303030303030303030303
% 030303030303030303030303030303030303030303030367eecd3503030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303cfa1a1e11d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d1dc3ada1df03030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303578abcffffeebcbce0e08a
% 8a8a8a8a8a4614030303030303030303030303030303030303030303030303030303030346cdff9b
% 24148affde6703030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030367ff000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000011ff67030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030335ee9b0303030303030303038aeecd46030303030303030303030303030303
% 03030303030303030303030303030303030303030303030324cdff78030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303038be46aff3b1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d2cff77d78d03030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030346cdffbc8a67240303038abc03
% 030303030303030303030303030303030303030303030303030303030303030303030303030367de
% ff9b24249bffde670303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303038abc000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000099cd249b14030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030335eebc030303030303030303030324bcff9b1403030303030303030303030303
% 03030303030303030303030303030303030303030303030303038affbc1403030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030346ff4ff1771d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d68ff4eff5703030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303249bffbc24030303030303038abc03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 67deff9b24249bffde67030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303cd88000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000044ff6bdeee670303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030335eecd140303030303030303030303030357eeee67030303030303030303030303
% 03030303030303030303030303030303030303030303030303030335deee57030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303f085bba51d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 1d96d677ff1403030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303038aeede570303030303030303039bbc03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030367deff8a14249bffcd4603030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030314ff55000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000cc9b148affbc24030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030335eecd14030303030303030303030303030303148affbc2403030303030303030303
% 03030303030303030303030303030303030303030303030303030303149bff9b2403030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303aec977ff591d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% 4aff85aecf0303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030314cdee8a0303030303030303030303bc8a03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030367deee8a14249bffbc460303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030346ff11000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000066ff140335cdff8a0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030314decd1403030303030303030303030303030303030346cdff8a030303030303030303
% 03030303030303030303030303030303030303030303030303030303030357deff8a140303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030346ff77bae12c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d
% d2c76aff570303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030314cdde24030303030303030303030303de8a03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303148aeeee8a1446bcffbc46030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303038acc00000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000011ee7803030378eede46
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030314cdcd1403030303030303030303030303030303030303030378eede4603030303030303
% 030303030303030303030303030303030303030303030303030303030303030378eeee8a14030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303038df24ef1961d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d96
% f05ae4b0030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303cdee3503030303030303030303030303ff4603
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303148aeeee8a1446bcffbc4603030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303bc9900000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000088de0303030324abff
% 9b140303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030314cdcd14030303030303030303030303030303030303030303030324abff9b140303030303
% 030303030303030303030303030303030303030303030303030303030303030303148aeeee780303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030314e1bc76ff591d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d59ff
% 91a1f014030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303039bee350303030303030303030303030324ff3503
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303148aeeee780346bcffbc240303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303ee6600000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000022ff57030303030357
% eeee6703030303030303030303030303030303030303030303030303030303030303030303030303
% 030314cdee14030303030303030303030303030303030303030303030303030357deee6703030303
% 0303030303030303030303030303030303030303030303030303030303030303030303148aeede67
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030348ff77baf02c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2ce1c8
% 6aff5903030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303039bee35030303030303030303030303030346ff0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303148aeede670346bcff9b24030303030303030303030303030367670303
% 03030303030303030303030303030303030303030303030303030303030303030335ff3300000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000bbab030303030303
% 148affbc240303030303030303030303030303030303030303030303030303030303030303030303
% 0314cdee3503030303030303030303030303030303030303030303030303030303148affbc240303
% 03030303030303030303030303030303030303030303030303030303030303030303030303249bff
% ee8a1403030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303038ff14ef1f0681d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d59e1f15a
% e4af0303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030378ff5703030303030303030303030303030378ee0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303149bffde670357deff9b240303030303030303030303038a8a4657
% 14030303030303030303030303030303030303030303030303030303030303030378ee0000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000055ff240303030303
% 030346cdff8a03030303030303030303030303030303030303030303030303030303030303030303
% 14cdee350303030303030303030303030303030303030303030303030303030303030335cdff8a14
% 03030303030303030303030303030303030303030303030303030303030303030303030303030314
% 8aeeff9b240303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030314e0c94ebaff962c1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d2c96ffba4ebc
% f0140303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030314ee8a030303030303030303030303030303038abc0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303249bffde670367deff9b2403030303030303030303de140314
% bc03030303030303030303030303030303030303030303030303030303030303039baa0000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000dd9b0303030303
% 030303038aeede460303030303030303030303030303030303030303030303030303030303030303
% abee350303030303030303030303030303030303030303030303030303030303030303030378eede
% 46030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030367deffbc46030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030335e0f17776f1e1601d1d1d1d1d1d1d1d1d1d1d1d1d60e1f17677f1e0
% 35030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303781403030303030303030303030303030303cd9b0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303249bffde570367deff9b140303030303030367ab032403
% 570303030303030303030303030303030303030303030303030303030303030303ee770000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000077ee1403030303
% 030303030324bcff8a1403030303030303030303030303030303030303030303030303030303039b
% ee3503030303030303030303030303030303030303030303030303030303030303030303030324ab
% ffab1403030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030346bcffde6703030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303148fffbc4ed5ef2c1d1d1d1d1d1d1d1d1d261d2cefe55abcffaf14
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030324ff570303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303249bffbc460367deee8a140303030303de358a7803
% 413503030303030303030303030303030303030303030303030303030303030335ff330000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000011ee7803030303
% 0303030303030357eeee570303030303030303030303030303030303030303030303030303039bee
% 35030303030303030303030303030303030303030303030303030303030303030303030303030303
% 57deee78030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303249bffde8a1403030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030348e1f280f4981d1d1d1d1d1d1f1d1d1d1d98f574e4f0590303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030378ee030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030324bcffbc46038aeeee8a140303469b03461403
% bc1478030303030303030303030303030303030303030303030303030303030378dd000000000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000099de03030303
% 0303030303030303148affbc240303030303030303030303030303030303030303030303039bff46
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03148affbc3503030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303248aeeee9b240303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303148dffe2ff3b1d1f1d1e1d1e1d1d1d4bffceffae14030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303cd9b030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030346bcffbc46148aeeee8a438a7803030346
% 7835bc03037824030303038a4603030303030303030303030303030303030303ab99000000000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000022ff57030303
% 0303030303030303030346cdee8a030303030303030303030303030303030303030303039bff6703
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030335bcff8a140303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303031478deff8a14030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030346aefce61d1d1d1d1e1d1d1d1dddffae570303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030324ff57030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030346bcffbc46148aeeee8a33240335ab
% 03578a03039b2435460303ab1403030303030303030303030303030303030303ff66000000000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000bbbc030303
% 0303030303030303030303038aeecd46030303030303030303030303030303030303039bff670303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030378eede4603030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030378eeee670303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030346ff5d1d231d1d1d1d1d78ff4603030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030378de03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030346bcff9b24148aeede67031478
% 46bc3503249b03249b03358a0367030303030303030303030303030303030346ff22000000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000044ff240303
% 0303030303030303030303030324bcff8a140303030303030303030303030303030378ff67030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030314abffab240303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303149bffbc35030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303bcc11d1d1a1d1d1d1ddf9b0303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303cd8a03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030346deff9b24148affde6703
% 036746038a24038a46039b338a8a03030303030303030303030303030303038acc00000000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000dd9b0303
% 03030303030303030303030303030357eeee57030303030303030303030303030367ff6703030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030346deee7803030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030346cdff670303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030346ff3b1d1b1c1b1d48ff350303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030324ff3503030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030367deff9b24249bffde
% 670303038a1435ab03249b03ab573503030303030303030303030303030303cd8800000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000066ee1403
% 03030303030303030303030303030303149bffbc24030303030303030303030367ff670303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303148affcd350303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030378ff6703030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303dea11d1d1d1d1d92de030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303039bde0303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030367deff9b24249b
% ffde67030335678a038a24249b030303030303030303030303030303030314ff5500000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000011ee8a03
% 03030303030303030303030303030303030346deee8a03030303030303030367ff8a030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030335bcff8a14030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030367ff67030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030378ee191d1d1d49f478030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030346ff570303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030367deff8a14
% 249bffbc46030314358a149b24140303030303030303030303030303030357ff1100000000000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000000088ee03
% 03030303030303030303030303030303030303038affcd4603030303030367ff9b03030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030367eede570303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030367ff460303030303030303030303030303030303
% 0303030303030303030303030303030303030303030324ff681d1b1d6eff24030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030314deab030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030367eeee
% 8a1424abffbc46030303038a3535030303030303030303030303030303039bbc0000000000000000
% 00000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000000022ff67
% 03030303030303030303030303030303030303030324bcff8a1403030367ff9b0303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303149bffab24030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303ab670303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303cd961d1d1d9fee24030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303038aee24030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303148a
% eeee8a1446bcffbc46030303140303030303030303030303030303030303de880000000000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000099de
% 030303030303030303030303030303030303030303030367eede570335ff9b030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030346deee780303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303038ae11d1d1cef8f8a030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030335ff7803030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 148aeeee8a1446bcffbc4603030303030303030303030303030303030324ff330000000000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000022ff
% 460303030303030303030303030303030303030303030303149bffbcf09b03030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303038affcd35030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030346ff2c1d76ff14cd030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303cdbc0303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303148aeeee670346bcffab240303030303030303030303030303030378ee000000000000000000
% 00000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000bb
% bc030303030303030303030303030303030303030303030303036bfdf87803030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030324bcff8a1403030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030324ff591d94bc0378670303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303038aff240303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303148aeede670346bcff9b240303030303030303030303030303cd99000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000044
% ff24030303030303030303030303030303030303030303030335eebc8affcd350303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030367eeee57030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303038ade941dafab0314bc0303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030367ff67030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303249bffde670367deff9b24030303030303030303030324ff55000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% dd9b0303030303030303030303030303030303030303030335eecd140324bcff8a14030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303149bffbc2403030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030314cd9bc31dd08a03038a6703030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030367ff8a03030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303249bffde670367deff9b2403030303030303030378ee00000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 66ff24030303030303030303030303030303030303030335eecd140303030367eede570303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030346deee8a030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030314
% 578a8a8a78240303030303030303030303030303030367678ae01cff57030314cd14030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030335ee9b0303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303249bffde460367deff8a1403030303030303cd9900000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00ee8a0303030303030303030303030303030303030314decd1403030303030314abffab24030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303038aeecd4603030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303039bab
% 7846464667abab350303030303030303030303030303cd1446ff24ff46030303678a030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030335ee9b030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303249bffbc460367deee8a140303030314ff5500000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0088ee14030303030303030303030303030303030314cdcd1403030303030303030346deee780303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030324bcff8a140303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030324bc8a140303030303030303030303578a0346ff5fff0303030303bc350303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030314eecd14030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030335bcffbc46148aeeee8a14030367ee0000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0011ee8a0303030303030303030303030303030314cdcd140303030303030303030303148affcd35
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030357eeee5703030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030357cd4603030303030303030303bc240303ffa9de030303030335de3503030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030314cdcd1403030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030346bcffbc46148aeeee8a14ab990000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000088de03030303030303030303030303030314cdee14030303030303030303030303030335bcff
% 8a140303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303148affbc240303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030314ab9b14030303030303038a78030303ffb9bc03030303030335de35030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030314cdde140303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030346bcffbc35148aeeefff550000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000022ff670303030303030303030303030314cdee35030303030303030303030303030303030378
% eede4603030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030346cdff8a03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030346cd8a240303030324cd03030303bce08a0303030303030335de671403
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303cdee35030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030346bcff9b2414b8ffd00000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000099de03030303030303030303030314cdee3503030303030303030303030303030303030303
% 14abffab140303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303038aeede460303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303679bbc8a8a8ad23503030303bcf78a03030303030303030367cdb9
% 67460303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303039bee3503030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030357deff9bb6b0550000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000022ff570303030303030303030303abee350303030303030303030303030303030303030303
% 030346deee7803030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030324bcff9b14
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303034646b6a10303030303bcff460303030303030303030303c2
% 678abcbcbcabbcbc9b8a573503030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303038aee350303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030367e0ffc2220000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000aabc030303030303030303039bee35030303030303030303030303030303030303030303
% 030303148affbc350303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030357deee
% 67030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303039b9b0303030303038aff460303030303030303030303bc
% 03030303030303031446789bcdab0303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030335ff78030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030367ffdfdd0000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000044ff4603030303030303039bee3503030303030303030303030303030303030303030303
% 030303030335bcff8a14030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303148a
% ffbc2403030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303149b8a030303030303038aff460303030303030303030303bc
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303cdbc03030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303bcaa00220000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000bbbc030303030303039bff460303030303030303030303030303030303030303030303
% 0303030303030378eede460303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 35cdff8a030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030357cd5703030303030303038aff460303030303030303030303bc
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303038aee2403030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030324ff5500000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000044ff3503030303039bff6714cd9b571403030303030303030303030303030303030303
% 030303030303030314abffab14030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030378eede4603030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030346bc8a140303030303030303038aff460303030303030303030314ab
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030335ff780303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303038add0000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000bb9b030303039bff67030357ffffffcd140303030303030303030303030303030303
% 0303030303030303030357deee780303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030324abffab140303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030335bc8a2403030303030303030303036dff4603030303030303030303578a
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303cdbc030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303ee880000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000066ff24030378ff67030303038affffa1030303030303030303030303030303030303
% 0303030303030303030303148affbc35030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030357deee7803030303030303030303030303030303030303030303030303030303030303
% 0303030303030303038abc240303030303030303030303030377ff24030303030303030303039b24
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030324ff35030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030367ff220000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000dd9b0367ff67030303030314cddee0240303030303030303030303030303030303
% 0303030303030303030303030335cdff8a1403030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303148affbc350303030303030303030303030303030303030303030303030303030303
% 03030303030303039b6703030303030303030303030303030377ff0303030303030303030324bc03
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030378de03030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303bcab000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000066ff7bff6703030303030303354603030303030303030303030303030303030303
% 03030303030303030303030303030393eede46030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030335cdff8a14030303030303030303030303030303030303030303030303030303
% 030303030303039b8a0303030303030303030303030303030377ff030303030303030303038a6703
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303cd9b03030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030324ff55000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000ebff8a030303030303030303030303039b780303030303030303030303030303
% 030303030303030303030303030324ab24abff9b1403030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030378eede460303030303030303030303030303030303030303030303030303
% 030303030303469b030303030303030303030303030303030377ff03030303030303030324ab0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030324ff5703030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303038add00000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000084ff240303030303030303030303030324240303030303030303030303030303
% 03030303030303030303030303039bff030357deee67030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030314abffab14030303030303030303030303030303030303030303030303
% 030303030303cd14030303030303030303030303030303030377ff0303030303030303039b460303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030378ee0303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303ee8800000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000dd9b0303030303030303030303030303030346670303030303030303030303
% 0303030303030303030303030314eeff570303148affbc2403030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030346deee780303030303030303030303030303030303030303030303
% 03030303038a7803030303030303030303030303030303030377ff030303030303030314bc030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303cd9b0303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030357ff2200000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000066ff1403030303030303030303030303030324670303030303030303030303
% 0303030303030303030303030367ffff9b0303030335cdff8a030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303148affbc35030303030303030303030303030303030303030303
% 0303030303cd0303030303030303030303030303030303030377ff03030303030303038a57030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303ff570303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303abaa0000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000dd8a03030303030303030303030303030303030303460303030303030303
% 030303030303030303030303039be0ffde03030303030378eede4603030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030335bcff8a1403030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030324770303030303030303bc03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303ff460303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030324ff550000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000088ee14030303030303030303030303030303030303bc0303030303030303
% 0303030303030303030303030303788a030303030303030324abff9b140303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030378eede57030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030314ab03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030335ff460303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303038add000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000011ee8a030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030357eeee6703030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030314abffab2403030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303468a03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030346ff030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030314ee88000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000088ee140303030303030303030303030303030303030303bc5703030303
% 030303030303030303030303030303030303030303030303030303148affbc240303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030346deee78030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303468a03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030346ff030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303038aee11000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000dd8a0303030303030303030303030303030303030303240303030303
% 030303030303030303030303030303030303030303030303030303030346cdff8a03030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303038affcd3503030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303248a03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030346ff030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030314ee8800000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000066ff2403030303030303030303030303030303030303030303467803
% 0303030303030303030303030303ab570303030303030303030303030303038aeede460303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030324bcff8a140303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303cd03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030367ff030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303038aee1100000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000dd9b03030303030303030303030303030303030303030303355703
% 030303030303030303030303030324030303030303030303030303030303030324bcff8a14030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030367eede5703030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303039b35030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030378ff030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030314ee880000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000066ff24030303030303030303030303030303030303030303030303
% 1457030303030303030303030303030303030303030303030303030303030303030357eeee570303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303149bffbc240303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303359b030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030346ff030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303038aee110000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000dd9b030303030303030303030303030303030303030303030303
% 14bc030303030303030303030303030303030303030303030303030303030303030303148affbc24
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030346deee8a03030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030357030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030335bc030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030314ee88000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000066ff240303030303030303030303030303030303030303030303
% 0303030303030303030303030303ab2403030303030303030303030303030303030303030346cdee
% 8a030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303038affcd460303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303038aee11000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000dd9b0303030303030303030303030303030303030303030303
% 03030303bc460303030303030303570303030303030303030303030303030303030303030303038a
% eecd4603030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030324bcff8a14030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030314ee8800000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000066ff2403030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 24bcff8a140303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030367eeee570303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303038aee1100000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000dd9b03030303030303030303030303030303030303030303
% 03030303030303676703030303030303030303030303030303030303030303030303030303030303
% 030357eeee5703030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303148affbc24
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030314ee880000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000066ff35030303030303030303030303030303030303030303
% 03030303030303353503030303147803030303030303030303030303030303030303030303030303
% 030303149bffbc240303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030346cdee
% 8a030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303038aee110000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000bcbc030303030303030303030303030303030303030303
% 03030303030303030303146703148a03030303030303030303030303030303030303030303030303
% 030303030346deee8a03030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303038a
% eecd4603030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030367bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc
% bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc
% bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc
% bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc8a03030303030303030303030303030303030303030303
% 0303030303030303030303030324ee88000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000044ff460303030303030303030303030303030303030303
% 03030303030303030303249b03030303030303030303030303030303030303030303030303030303
% 030303030303038affcd460303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 24bcff9b140303030303030303030303030303030303030303030303030303030303030303030303
% 030303038a9944444444444444444444444444444444444444444444444444444444444444444444
% 44444444444444444444444444444444444444444444444444444444444444444444444444444444
% 44444444444444444444444444444444444444444444444444444444444444444444444444444444
% 4444444444444444444444444444444499bc03030303030303030303030303030303030303030303
% 03030303030303030303030303abdd00000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000bbbc0303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030324bcff8a14030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030357eeee6703030303030303030303030303030303030303030303030303030303030303030303
% 030303038a7722777777777777777777777777777777777777777777777777777777777777777777
% 77777777777777777777777777777777777777777777777777777777777777777777777777777777
% 77777777777777777777777777777777777777777777777777777777777777777777777777777777
% 7777777777777777777777777777772277bc03030303030303030303030303030303030303030303
% 03030303030303030303030357ff4400000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000044ff5703030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030367eede570303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303148affbc240303030303030303030303030303030303030303030303030303030303030303
% 030303038a7744ffbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
% bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
% bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
% bbbbbbbbbbbbbbbbbbbbbbbbbbbbee4477bc03030303030303030303030303030303030303030303
% 030303030303030303030314ee990000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000099de03030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303149bffab24030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030346cdff8a03030303030303030303030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 03030303030303030303038aee110000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000022ff67030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030346deee780303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030378eede460303030303030303030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 0303030303030303030346ff66000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000099de030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303038affcd35030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030324abff9b14030303030303030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 03030303030303030303cdbc00000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000011ee8a0303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030324bcff8a1403030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030357deee670303030303030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 0303030303030303038aee2200000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000088ee1403030303030303030303030303030303
% 1457ab35030303030303247803030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030367eede57030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303148affbc35030303030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000033996644558833
% 99000000000000000000000000000000000000000033990000000000000000000000000000000000
% 00000000000033990000000000000000558877000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 030303030303030324ee880000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000011ee8a03030303030303030303030303030303
% 0303bc03030303030303145703030303030303670303030303030303030303030303670303030303
% 0303030303030303030303030303030303030314abffab2403030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030335cdff8a1403030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000011220000000000000000000000bb4400006600
% bb000000000000000000000000000000000066000000bb0000000000000000000000000000000000
% 00000000000000bb0000000000000000aa0000000000000000000000000000006600000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 0303030303030303bccc000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000066ff24030303030303030303030303030303
% 0303bc03030335462403354635462446030346bc4614030303144646240346572446bc4614144646
% 24030303030303030303030303030303030303030346deee78030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030378eede46030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000044ffcc77110000000000000000bb4400442200
% bb0000334422003344334422334400000044bb441100bb2244000033442222003344220033440044
% 33003344445500bb2244000000000033cc443344222200225511000022442244bb44113344004433
% 0033442222004455221144442200bb4477bc03030303030303030303030303030303030303030303
% 0303030303030367ff44000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000ccbc030303030303030303030303030303
% 0303bc0303466703784603bc03de1446780303bc03030303038a0314465767039b03bc03038a0314
% 46030303030303030303030303030303030303030303148affcd3503030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030324abffab1403030303030303030303030303030303030303
% 030303038a7744ff0000ffffffffbb0000bbffffffffffffffff9911000000000000bb7766880000
% bb00446600774411aa009900224400000000bb000000dd1144770000dd3355446600774400bb0044
% 88446611992200dd1144770000000000bb0000dd33553377009900448800aa00bb000000bb004488
% 0000dd3355556600998800114400bb4477bc03030303030303030303030303030303030303030303
% 03030303030314ee8800000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000044ff460303030303030303030303030303
% 0303bc0303ab1403469b03bc03bc03468a0303bc030303030357bc8a14ab57468a03bc030357bc8a
% 14030303030303030303030303030303030303030303030335bcff8a140303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030357deee78030303030303030303030303030303030303
% 030303038a7744ff0000444444443300003344444476ffee99550000000000000000bb4400660000
% bb00aa1100449900aa118855550000000000bb000000bb0044880000bb0000aa1100449900bb0044
% 88556600aa0000bb0044880000000000bb0000bb0000005544bb009944000000bb000000bb004488
% 0000bb0000aa55448855bb881100bb4477bc03030303030303030303030303030303030303030303
% 030303030303cdcc1100000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000aade0303030303030303030303030357
% 5703bc03039b3503468a03bc03bc03468a0303bc03350303035703468a9b35031403bc0335570346
% 8a0303030303030303030303030303030303030303030303030378eede4603030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303148affbc3503030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000022660000000000000000000000bb4400000000
% bb0099330044880055881188550000000000bb003300bb0044880000bb0000993300448800bb0044
% 88225555110000bb0044880000000000bb0000bb0000666600bb228844001100bb003300bb004488
% 0000bb0000993300115500448800bb4477bc03030303030303030303030303030303030303030303
% 03030303039bee330000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000022ff7803030303030303030303030357
% 5746780303247846781435de50de2478ab14039b57240303039b35465714784657039b57249b3546
% 57030303030303030303030303030303030303030303030303030314abffab140303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030335bcff8a140303030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000033cc8822000033
% dd222277447711000099008822000000000099552233dd2277aa1133dd3300227744771100883355
% aa31ccbb881133dd2277aa1100000033dd3333dd3300558833aa44118844660099552200883355aa
% 1133dd3300117744559933445500bb4477bc03030303030303030303030303030303030303030303
% 0303030378ff55000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000088ee14030303030303030303030303
% 24240303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030346deee7803030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030378eede4603030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00880000118800000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 03030346ff7700000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000011ee8a030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303148affbc350303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030314abffab240303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00665544554400000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 030335ee9a0000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000066ff240303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030335bcff8a14030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030346deee7803030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 0314cdcc110000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000ccbc0303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030378eede460303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303148affcd350303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 03bcee11000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000044ff5703030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030314abffab14
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030335bcff8a14030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030303
% 8aff3300000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000088ee14030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030357deee
% 78030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030367eede570303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000033996644558833
% 99000000000000000000000000000000000000000033990000000000000000000000000000000000
% 00000000000033990000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030303030367
% ff660000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000011ee8a030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303148a
% ffbc3503030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303149bffab24030303
% 030303038a7744ff0000000000000000000000000044cc7722000000000000000000bb4400006600
% bb000000000000000000000000000000000066000000bb0000000000000000000000000000000000
% 00000000000000bb0000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc030303030303030303030303030303030303030335ff
% 88000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000066ff460303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 35cdff8a140303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030346deee780303
% 030303038a7744ff0000bbbbbbbbbbbbbbbbbbbbbbcdffffffaa6611000000000000bb4400442200
% bb0000334422003344334422334400000044bb441100bb2244000033442222003344220033440044
% 33003344445500bb2244000000000033443344000000334422003344222200445522114444220000
% 0000000000000000000000000000bb4477bc0303030303030303030303030303030303030335eebb
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000bccd0303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030378eede4603030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303038affcd46
% 030303038a7744ff00008888888888888888888888a8ffffee995500000000000000bb7766880000
% bb00446600774411aa009900224400000000bb000000dd1144770000dd3355446600774400bb0044
% 88446611992200dd1144770000000000dd1111aa00446600774400dd335555660099880011440000
% 0000000000000000000000000000bb4477bc03030303030303030303030303030303030335eebc11
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000022ff7803030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030324abff9b140303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030324bcff
% 8a1403038a7744ff0000000000000000000000000044aa6600000000000000000000bb4400660000
% bb00aa1100449900aa118855550000000000bb000000bb0044880000bb0000aa1100449900bb0044
% 88556600aa0000bb0044880000000000bb0000bb22aa1100449900bb0000aa55448855bb88110000
% 0000000000000000000000000000bb4477bc030303030303030303030303030303030367ff9a0000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000088ee24030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030357deee6703030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030367
% eeee57038a7744ff0000000000000000000000000000000000000000000000000000bb4400000000
% bb0099330044880055881188550000000000bb003300bb0044880000bb0000993300448800bb0044
% 88225555110000bb0044880000000000bb0000bb11993300448800bb000099330011550044880000
% 0000000000000000000000000000bb4477bc0303030303030303030303030303030367ff99000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000011ddab030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303148affbc240303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 149bffbc997744ff0000000000000000000000000000000000000000000000000033cc8822000033
% dd222277447711000099008822000000000099552233dd2277aa1133dd3300227744771100883355
% aa31ccbb881133dd2277aa1100000000dd33776600227744771133dd330011774455993344550000
% 0000000000000000000000000000bb4477bc0303030303030303030303030303038aff8800000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000044ff570303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030335cdff8a03030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030346def77744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00880000118800000000000000000000bb0000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030303030303039bff660000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000aaee1403030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030378eede460303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303c97744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00665544554400000000000000000066dd4400000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc030303030303030303030303039bff66000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000011ddab03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030324abff9b14030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc030303030303030303030314cdee3300000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000044ff57030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030357eeee670303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc0303030303030303030314cdee330000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000088ee140303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303148affbc24030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303030346decc33000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000011ddab0303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030346cdff8a0303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303038a7744ff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000bb4477bc03030303030303148affbb1100000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000044ff7803
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303038aeede46030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303038a7744ff4444444444444444444444444444444444444444444444444444444444444444
% 44444444444444444444444444444444444444444444444444444444444444444444444444444444
% 44444444444444444444444444444444444444444444444444444444444444444444444444444444
% 4444444444444444444444444444cc4477bc03030303030346deee66000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000000088ee24
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030324bcff8a1403030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303038a7733bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
% bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
% bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
% bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb3377bc0303030314abffab1100000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000000011ddbc
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030357eeee57030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303038a7700000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000077bc03030357eedd55000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000033ff
% 8a030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303148affbc2403030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303038affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffbc0324bcff891100000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000077
% ff460303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030346cdee8a030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030324464646464646464646464646466bdaffa9464646464646464646464646464646464646
% 46464646464646464646464646464646464646464646464646464646464646464646464646464646
% 46464646464646464646464646464646464646464646464646464646464646464646464646464646
% 46464646464646464646464646464646463578eedd44000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 99ee2403030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303038aeecd4603030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030378eede4603030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030335bcff880000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 11cccd03030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030324bcff8a140303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030324abffab140303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030357abffcc33000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0033ee8a030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030357eeee5703030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030357deee7803030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303031478deffbc550000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000066ff670303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303149bffbc240303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303148affbc350303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303359bffee882200000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000088ee3503030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030346deee8a03030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030335cdff8a14030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303031467cdffcd6611000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000cccd14030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303038affcd460303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030378eede460303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303248aeeff9a33000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000011cccd140303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030303030303030324bcff8a14
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303030303030303030303030314abffab14030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 032467bcffdd77110000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000033eecd0303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030367eede
% 57030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030346deee780303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030324679b
% deffeeaa550000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000033ee9b03030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030303149b
% ffab2403030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303148affbc35030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303033578abdeffeeab
% 77330000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000033ee9b030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 46deee78030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030335bcff8a1403
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303033546788aabeeffeeab77330000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000066ff8a0303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03038affcd3503030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030378eede57
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030303030303033546678a9bbcddffffffeebcaa7733000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000066ff8a03030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030324bcff8a140303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303030303030303030314abff
% ab240303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030346468a8aabbceeffffffeebcbb88774433000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000066ff9b140303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030367eede5703030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030346
% deee7803030303030303030303030303030303030303030303030303030303030303030303030303
% 03034646788a9bbccdffffffffddbc99887744330000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000044eecd1403030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030314abffab240303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 038affcd350303030303030303030303030303030303030303030303030303031446468a8a9bbccd
% ffffffffeebcbb888855442200000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000033ccde35030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030346deee7803030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030324bcff8a14030303030303030303030303030303144646788a8abcbceeffffffffddbcaa8888
% 55442200000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000011ccee570303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303148affcd350303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030367eede2403030303244646788a8abcbceeffffffffeebcbc888877444411000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000099ffab24030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030335bcff8a14030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 033546468a92c9bcbcdeffffffffffeebcbb88887744441100000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000044ddee8a0303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030378eede460303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303030303030303030303030303354646788a8a9bbcbceeff
% ffffffffddbcbc888888554444000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000088eeee8a350303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 030303030303030303030303030314abffab14030303030303030303030303030303030303030303
% 03030303030303030303030303030303244646578a8a8abcbcbcffffffffffffffbcbcbb88888844
% 44330000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000002277ddffeeab783503030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030346deee780303030303030303030303030303030303030303
% 0303464646678a8a8aabbcbccdffffffffffffffccbcbc9988886644443300000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000003377aaeeffffbcab8a574603030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303030303030303030303030303148affbc3503030324464646578a8a8a8abcbcbcbceeff
% ffffffffffffccbcbcaa888888664444440000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000225588aabcffffffdebc9b8a8a57
% 46460303030303030303030303030303030303030303030303030303030303030303030303030303
% 03030303030303030303030303030303030303030303030303030303030303030303030303030303
% 0303030303034646464646788a8a8a8a9bbcbcc9edfeffffffffffffffffddbcbcbcaa8888888844
% 44442200000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000022447788bbbcccff
% ffffffffffbcbcbcbc8a8a8a8a8a5746464646464603030303030303030303030303030303030303
% 03030303030303030303030303030324464646464646464646468a8a8a8a8a8a8aabbcbcbcbcbcbc
% ddffffffffffffffffffffffbcbcbcbcbb88888888a0444444441100000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0022444466888888aabcbcbcbcddffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffccbcbcbcbcbcbb888888888888
% 88664444444433000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000334444444444444444444444444444444444444444
% 44444444444444444444444444444444441100000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000
%%EndImage
%%EndPreview
%%Page: 1 1 
%%BeginDocument: C:\Users\admin\AppData\Local\Temp\latexdraw\latexdrawTmp161797641044444793\tmpPSFile.eps 
/InitDictCount countdictstack def gsave save mark newpath 
userdict /setpagedevice /pop load put 
%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: tmpPSFile
%%CreationDate: Fri Apr  9 13:53:32 2021
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 469 346
%%DocumentFonts: CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Pdownload35 -T
%+ 16.510697902212275cm,12.187369646984743cm tmpPSFile -o
%+ C:\Users\admin\AppData\Local\Temp\latexdraw\latexdrawTmp161797641044444793\tmpPSFile.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2021.04.09:1923
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 616 2017-10-04 16:14:42Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.27, 2017/09/18
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
dup 71 /G put
dup 74 /J put
dup 76 /L put
dup 82 /R put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6DFD21EAD729CDB7B378CEDD34262B37A194EDD0BDB24AA42649375B
491DC08F6B03DFEB517B2FC125DA9373AFAA94F4E4BC09510A73E079F4ABDD8F
93529E898B13ABCDE7322323B3A2A02A0BF388E89B4F529A66FA22D38E3EE342
54475A1989BFB7A119CF95750D5A18BB4FA9CDA30DB6F1AEF8AE8448BBC999C9
FD0D74DE9A17A3153617F07CACE92977B68FB5A1CFB29FD42494D5D2B9C1ED81
2F3CCEEC1BC079E837DDBB57C7E351F9925FB96349F8D9786D8E6FF03E9C4C1E
67DB235577B68003BA14073E2702296B284F803259283005D97035874D2B9AFD
4D3F29B4B1E6EDE30DDB9C68348CC174A091791FA74520C8614D4FB1125CBD6F
B9367559D715ED057FDF6DAAC180C7FA5CCEFD0C5878A91B20D4919792C03CA9
3AFC986C34C08358A3E85F241E3F8F815FCE7C8E07C2A4258E17D65823264049
3803D47C96A2745580EDC957AC4291730A840A2BADA50A28342A2B7093A3F731
4F4F656E974389E133C53F89D5DD6407BB98B211697941A927BC72A0956FA78E
2DC624B2C253F76778698BD1510D509244AB0465D4261E3AC31D77C4F755096B
50C9CD8103CFF51490796CF35B02E38BFB36CBF2E6D0D7304344C4523C369946
C3BAD318835D4707E90A0340BB7B6ABEBE9EF7E7FF54D1784AB514FAC0FDC8DE
B8DE95405811AB28535F598E184CE235D4B6862E19F126264A06CD3C2E34CE2B
3E0665C3931629BC216CBD42AF4FC177E04656A9672293E79B32AB18FEAD1098
8960E90C40BE033D417AB97723EDFB82C88901DD8BAC4E89C36AC72560140421
800FFBFCF4372B123AB426DACC2C14EB92E2F97FC88E8FDDA774EBDBE7A95455
808119A3031BEAF016845F74D2578B0066F42A6DB4C0ADCE8298706C20BCB96D
E0177D9C8AB6DE487AB9F5ED9264F02115A7D25AE63F196F2D421C9E38145342
8FBBA70F966AF0F5EBF46EBCF1AAFC5F2217A9BD68908F0B8E1D910F2210FD68
718C39BD2CADD6E7C35AF7BF31F66E3C94DE2797EA505DDC0A5842CDA6E6E548
4BCA81A6764DD59F00B920D3C62C04AAB48F6BD8C8BD63D84077845095281D8D
B5E612935A3EB83BA0AB8F65ADCDF9A8685AE80181286B7FCE25037DB266E39C
383D626010AEE924485F278B98C322036F6C22ACEA85C480380B410790866D9F
4811C30BBD458B7C0326D25DD08617DB23BF7CB34B8DF4FDA67F875776B4A1A5
81FCA7D586094563790CC22C491D5E5306671CA0A088959B2A2CC6AFC2FEDAD6
C697F326440FB66C37AE95ADDD878BC2F894EA40682F08A9897A56150F6E1367
12C53894C4FBF864C74E56288B78D41EE04335908BED60AF1696FEE4BDC1B321
B5C4A5214256B42EC01BA2C893C3E188AD6F0A374F02F22A81C04A3B4839AB7C
39359AC7480C14BDC92AF2C39C5F01E1821DEB519DD3EB79BB1C311178AF9A3E
4A99292B8C1682A29F8046C929210BD50D4E7FFC0598477BF73995AAC76CE6F1
A8B768BA22F6AA7131825BECD7DA5B81FB2630E8840AC5323AA9BC15B278DD1D
33787E605FE29E733A5F8BF564FD36BFB1CD71770D870329DD3B8224D77F85F1
80C131C7C28E6E823E0E6CD27F925EB9FC7A78B173E56BE9F66281040C36B7C9
989C04E8E5F1500CEC6F93CAC3F7DB1333A4EB3CF59A35E394E11273FCD0E544
7DF71FCF993D5DA365FAEA43CFB72CE82184EDC509992BB5E47BE79867257E51
FE20B5D0E4EEE88356AB3176E5B498DFD3CD5A2CC45362CC867F89BA502FE1D5
1D57925B6BA383FF327B9AF9CAFBCA009B087689B691637F4F17CD09684B4A8F
AD4D27665BF4CF688CFA0E29E6097A206C910893D5714CE7F9E8EC15097C472D
10CDB0C1771EDDB9B003555F975213CF690386FF773A42C48EF4AD284AF072BE
9EC0E9C0ECC6F912AFBFBAF1389BAE45B2989DA00456D17C793639A615402A14
44023CEF0D675F19CD3AC9CAA3D98A72F20F45A2026DD5D548961D27DDC8B4CE
3EE79466007C7BAED25207BECCD13B5A6FE8EE09842D2C23459388127AE1251A
7C19DE1CE5ECD191B65997EBD308E2F0C6383D4658F20DB3652197B5BA942ACC
6F2ACE52FF958ABE645EC0B93D74265B5E62292B09D211C0ACC977CD1BB01F71
D999D500B349268DE077F06A85BC645ECD4C1C3ECDF1B6AB1036113A087C9F96
CBCB794021A753EB2DD5DD6D43B55A3F3ACADBA73938E7767A651E8B0FB5B886
E140D8EE58CF6A0D244B0F7476F7D710E57C58B7FB990F7F393A62B8559CE312
9549C594D33B30DE0A59DC9A63C68153608A05F4C0C7A0C8632D335E169B0EF7
A62DE9A66C3800D44168576524BE0B1B9D79279576A016EA02C1422559DD2B61
F2F2A99D8EE950A877F1BDB27B2DC05CC9FE8D9AD16D84AE50C69939C32EF2B9
3975F82E103CB8EA0DD9975226511D1A3485F97751EF8DA88A9EEE40F69B6424
D9696AE438A388472ABD8640D2B9B1844E0A001977DD226D19189FF54777680E
D1E492183746625E766D92B1ECB197EDAB1434BE0F419AA95DAD055F5158F421
692C375C2C670AC9E5978648F5395405557A84A025880635EFC5BF76D75737D9
93CCC2992E44BF2CCEC20C34AD9D32B6705C00F22BD56B3F726632F1776BF85A
6012F3BEBA9D5822E3172F75FBB2484432310E2AA5486A550A868D0C17E5861E
79939718243DB1F95843D6E82DCD40E8CD287ABE7FF1C9476D35403444A1A59F
55524B0071B5582DB3B86212C264A631C8FA87467DB439A6EE86BCA84A733FA6
F6EB1A003ED94F066CAE224040C8DA73430D475AECA3258F2E9398F395B81C7B
B6661AE2FFADA150F927A184EC13523332296DE59C4D8FDA511BCF6EED0768C4
B15D651FA8B720DC21DE0755EEE6F50AB18E78188751402F55C38E0CA06E41B1
EA4D1D2409651C7C5DDF1A876B9C097934A8DE6D8125514B17A8DE4737BF6588
9EE9FDFA11A543D6358BAA6FFFF20AB3C512F86A496E7C77173A0CDA0BCC4668
3C239700C53A82228BE7F075CE96A53614ADDA732F0927DAABCB313EFD0B5D85
75997D6B8A6BF548590FECEE8E9A021815069B99C4A80CE9AAE79F06B82D10C2
6BBB41F2646E6843966663AFC9E4A598B3ECAC0F07FCD009C79AA734D4FA650D
0D1CFB4C2D59FFADF8A517E0364778226F95F350FDE8DAA6B6148BB77A1E9A49
C5275E66B19322006ED3D9B323763FB47324AECED15F41F7AA0AEDC1B2BBF887
4CA52238CCC83D6D78786212F4736650174AFC3B1422E2D923B992293C67398F
DB4D15B99405E478321CFE3A31FFCD3477AE9EB6E45C1CCD09405BAF406D9CF9
BD3E5619C10F68532F4FE89C9D4E032790D750DA45DDC715F889E547A025A672
04DACF97FFAD652EAD8E39F1964AD7171FE7E8589075FD92D3DDB6F70E9D3B88
1887541FF1AF8FB82B889D8C5276B99973D6869C56C13E4B01E12BDCD5A90026
2CC026535F9925211A0553D94E1F9A3A2A63644F951EAF833FD711D38338C941
1F0910D566817AB710BBE62EDD329BAD490200D5BE25C211DE5C02FD9758B0FD
12EB8419731E870C7687D67DD010C94DDCE375331318A7AB2589B1828537A380
B670A372020D8776DC8B33A9D3045CF7A28D86DF49B15BF83B9EF9704096CF0F
B1D44C119CD1B2F732FA259E2D719A5F174350D7E5721B64E5E97FCE4DD99EA6
3B78CF9FB02B2A31A410FC1C1DE1A0BD79D7639C768589D774203E9098210861
29F34D14AF3EEE119EE54A6192DDBE0BBA04A721B6B0C7DBE115CE25D62F3115
FAA00A8CB1EB7B030BA79141ECEE03927EC648102EE40DF98ABE1943861CD484
D67047C49EB168FE81BD88970FE4C32F53894C8CA8BEA6CAFDE4C2FFC266ABC8
D1344C823F618F2CD1FB49D1C768539A9D82F4E22B0E3424307AAFDF7125B12E
561AA49270A906DE72A6F3131C26374CC8CB0EF592E7D9BFF21D97303AF840B4
4258316ACC9BB5EA745A5012D2F8A88907C43D36DCE6067FA73BBBBF49A425D5
7C842BE744610593FC862EC361F8D2F8A21507AEAAC56363B0E9A55B497299AB
8E1C6078C4CB5ECF2C337AE840C05DF17AA500A77C1153109C92824251CF3842
35DE3681FD4406A23A65BD0E67C9A19CF58EDDDC534E340EB3DD4A5FC033CD38
98EB84FE5E8842EE229AC62DF4B8F719B382885962FBB9CFF42D029D141BEB87
99FD6A9182A687B43DFC9F6F8D105D3A81EC37B439EF2BD0A0E96BE7261AE495
5F4947E3F8A0E76B5A9197C990D736F885882052BC2E79E702935C0B16E34605
9FC3C9AAA29D9AF2395E5B091637D56BED26A0129F06E9A03C55A12106C80020
491656A9FD7AD8DC6D9E3E173F77DAACC5D2BF6D0A0F2E0E79D627B6D9D4754E
6F68A19A5E43E4883B86C5008EBEC91FB4A0A6DA3CF5F0036A850E7366BC8A7C
27FFB1BF277FD91A979461A321F430A14DAC52C4365C0AF4E42B1CD5C113D9B3
A36CDE827A4EE35A0C56984EAF51E9363EB06986C2B469A2B54D3239188B2BD3
B621D4C74625A20A4073199C1F0B6306B6FC72E4B15594DA33B5514C43A0C302
A0B8FC44DD5115F1B2458B4BF1158ABDFE362A839976378DEDC82BA70B6A1B5C
2448841AB581B79735B6A92FAA435EC5A5BC30AE15519A79426451A3994694B8
572845DFC4C448894CA6008A29B09A8C59116EE11130ED79E0861F2B2B640E1C
DF622AE30E7096A43E18D813F7DAB669CCDB2348A9E612A9924CCB2BA6953FFE
0294248B2A3954E3A5CA2460009579B7ABF7F942AAE45C678123B4BDFF5B6084
70A0BBACDA8D3D710C2FE9E6BD018A36601AB4C886156F2EF5990C2B04ED6DFE
21C451340E3C3022B3AE22EB197EE11BE21B6658AD96BF2F79A67D33EA6B4115
B1D44387899768FC32EBA74DD530F2368955E18387DC1EC05F7870443DDEB91F
441CCEF40B24F1B3E6AA144D992820B11EA1FFAD64A0C27B3AB8A269E093E702
0833F65CD913E3138D8F4B3C17082C5153DCBF0E3AF1D887C43216250B21F23E
B20C91DEB5A2B949950BFEF8ED4504ADB548C8AEAA67575B13087F025F5CE43F
336AA3C91AB98125F80CE880BE905937EC917BC390269F8C44891F5D15D86592
5790C4204E2995AEAD22ADA657E0F22A28AF574D5E22FACADD4679315B4961E5
CCEB03B31A698CEE5F0470FD4AB3216DF6AC300F229DE02DABC69D8ACFEB9418
D722C20436B6F0F7DADC259CEA983B842F3EF65AE56FD81D0A76F8B2179F2F3E
E7EA2FB9AA1B95BA367FF673916771A670B36FFA8977CD84BB10DE4F55EA9167
906EBAE8E0E7B455906AC1C39059C4B3C4274D1C34B9A4263BD7D3130E28D736
7F5CC827FD50EC8C417FAC1DC0FF991F4B82A50E837DFB5DE0C749921D99C1FD
21B2AE9D58449C49442CCC1D3269D527BEE88B70CA4F6B514646794D8BB1E135
27EE83C5E1C365A918CBDA1AD6B701889256812FCC83F2FABA9F76A2C735CB5D
E7E873FEBAF081F6C705DDF044309084514E06AD4DFB62FE884940D66D61E284
CA296EEC2BDC957B26BA131C61B27635575639EB45A53EAD44122B2B0CCA4D0E
721433E4EFA86794A1E2A2A2FEDAB3BB9EC5317E4517E94A9D92E95C33869D00
4E0CDBEB249232561FF1A1B7E4FC7CA36123C9DA40CAAC0B9EB38139985DF42E
2A05CC0E4707B25F3144F9F8891BEE9B5B54EE47EDB203C54E455A34642361E5
4FAF69B8842F575807942E6679A361239CB23B1D8AE87F56D791228F156D260C
0F503F2D9A32FB8D8FF216E6485E22734E2BB2B887154462B9493C9F3527B071
9D852A926CB4EEA726FF08A68AC8000D7F879BAB00CCF9F731FFC084C24CFDC8
BA12E744F7038878C886126ED1B20000416F5534326A51BDA645BA102A67FE4E
8369E892F2963A17669EB132B5E284CAF8FF310B7CAB160A07B8EA223A6F6F9F
0CC9D4CA5E6D5AD568FE69279C8482FE3D19E92B214AA99E1741F686E2E045E9
DF7FC86247CD80FC3FEDFAFA6F365742849B3BBAB1C86FDF017C3F73FF23913C
8F76D090C47E3B266673D872373CBFCCE8BC46444E4F30375FCD061B6DE0EC15
BCE0D90189583CD385A8B84FE6C0B272E350BF42F5541AEC682D000357A5BECE
08E28F269A3251A447AF97A7D0D7B586222D682FF601CDA13FDCB50C91C21255
6B1164CED9655D0DD00930C2E652CD62AD11DAB048ED7B7CFAC26A053C902D6A
E5DB16403EFF0960596D4600BEC8E7D1B93C4E98CC5EE49FD9A86EFB7A3B2B5E
80998BB94E12CD063644463D2E7102592E101C04E82D06181C540C0CA43DCB0E
6A90D30C02255766CD72F2239C6B877F98DEAA90044565EE6237F75F00123421
A9C38C03F4BA012C1AF844712AF0F70D76EB4CF938A31A783F536D32A0037660
8534B22371603BA9CD76C669C0880F113C50B72699CCF662BD5962D05395B767
B4D7A258A8954D98DAB63932CFA2A284C2F07346CD4A251C888D92FD6A7098D8
884C90FD5AC427B9A8E588DCCD726C668FA46BB1B53D37A62CC388E3E85C7366
5F91ABE956A35FD977BB4F789AFC44008FFFE19297744A5C7F652C3F6A5A25DF
14F4AFC8D5F1CA6D880445D45F95060E9947987DB82DD082B042A3E8EFCF42E0
EE9117B929E5EA849B6BC6079AEC5CD9AF9B16D97F18941C025D1D68B1CD5FA3
76C68C9185DB16CDCC7A1F55D410EE8291FC0C6B9FFD01AD50BB200F510F9D89
FAA63EDE60D19E0292118536B2E6B2C83128BE73C608D87AFE7D21BDB5DE66C5
F0C41B7206AE29870620CD5AE75553A97A3DCA66C79F3A230C1DCA5676C7BACC
3E6F87C002B11449987BD915FF7F919AF69494167F6F9C3A1EFE61DFE454BE3E
1FC254FAF2482EC5A126BD04B5C10805E25BD0A692D8096BA09E0D4C16F32941
B475B30BE383E4D4BBDD37CBA4E23C0F133241F0C60A19DE29112BD2AE70A8CB
DDB44B883459F97A0E0176574CCBD15CBE57BBB78479A312A7148A5812A29B3A
864AFBD11991D50571DD80E378DAD0E404C2865BCF1D8F42333862B3BED1D2E1
8EB5CFC286CE907997ECD083DA04A73A18ECFB0167CCE3ABE269EFA028A47C06
6ECD5C1194F2660880B8A9011D2EFBBD14670D5A5B12D3E82C817D74E04A02D9
70D4632434C837B78A1324874B92BD11ACDEE55410098F39AC2D3D34A52080AB
814900130C8CD076136BD7316DA7EC609B5346555493000F34AE06821F77DC88
4F0E8EAF5EC02C900CCFAC68B33A55400A1A16006B86407D33F828E385ADFE02
C464427346D1D2E40E5999E9062C1AD6D906F22D97C85F61F6E787F6CBD40289
59488C01E5AC8BC54A237DCA359D748D3242095B1E04CC60712A3EA77BA465B9
46B9A43394DA549AA2DA02A0FF65308458AA0DB63BA075840FD83FDC349474B5
09B7B1843D60205F0CDCF1A236CD5EC835A350B7E250B874E8F7A400540D84BE
1DD8EBB1734E36D3E823C02F2AE4B08B17D50765F8A572DE58E1D9937A6330A9
E491510F4E596E443A7BE3DC325B2EBF118466474F3F670DE6323B6770840DC8
04CE3B06FB8B4A07FBCE16ED0A952155DB75B263B07F236CB0670AE0AAE3B3C9
4B2BA8CBFCEFA422A73D642203BAECE9ACC9C2AC175FE73B55A3610C99822E31
DA8DD0DFDF35AC89EAFC700BB7CE0C1C0F82B4E027CF1EE75C9121C628104F48
4A7CE22D0B54C8AB5C3DBE6191FB3FD690D44563F9E5C41C0EB3E30E8F76F765
D17955E4128E7EBD011E91BFC9974B48E05A003A4680EBE44C60688040FDE166
CFF8BD82D791F0D7002DCDC0245CE47F25166292FBF7BC608D4CC77411D46D23
572F36765D6775BB68C697A8FF48EF581527D524D0A6D74AB7754A404478DBCE
A61C5A40AB7D23AF02F6B90808C50789770940D59E2986EEE763D5006942E4FE
DC80C9B454AC6654FA2775B731C226A2B836A439CB818BE45DBA3D6E03CC95C7
95D95A5ABAFF555F3A0712B27B9376483CAB729C6F72A7D0EE549EAEF53E7ACB
037BB83D4D5498F1170663EF23850A1ADF618D4E935D169620D8AD707B9B72E3
3A40FE215EAB2129BDC0DAED15A6373021D6A6A75820B54CE091601BE1FD315E
E4C1EA704A15EA73BA7433FCFFB3C3F3E508920517A500487F081B3EA6C60BD7
DBFC3DE82968D482B3C9A701CA25FCA52CF232549CBC5C808E193323F00540F5
D6FE793B43244CDE4AE84C6C75936FD6293BFBA4E5995FC35164E32969C3C7FB
DB195B4BF6469F644655646590A2E0F7CD5E6B4981AF1FE074968149B7A7EC7C
6DB10F031C45503C1E9B8D117BA616FC4A8307373702F3B8CF98A13531D0F304
FD7A9EB6B80929E98ABF957A270CF741498989C4E3B09B560A0D9605413BE9F0
D78AE6EF5CECB48E9A8CCA90A6640475C39735B620DCC9EC843621E6BEE76A8A
BBB136F81FED3D7086486DD3F98CE2E2340C52B587D54D2C8499BFBB5651ADDF
6CCA00BA7EC9BDE427BFE7A9AD984EE80572625507FA81619144ECA9DDA1BD7D
2EE1CAA53D26E7ADB5607070CF8857E8B21815A43907DDC0579AC45EAA000DBD
46CD7041314AC869555153A234A25D20E7F7B81A96F37A752BB8EAFAA39D560D
3E38481BB8C9F53B99E7B79FE6178F289F374FA3B5A3F4E65EEBB33E8DD50837
70CC47AD8F7DAC2849B800B53A49DDE688B73832CBD6EBC06E1820ABEE3E4583
0799A05AD4C8D8C233C64BAA986C2E0E92E1189CE0C2F827E80289D3A8F2E398
077FDC5780E74E3D85D1159784008721738BFC2A32BA5FE362A8511FDD911394
757F749C2BCCA095D73BAD4AEFD98282B3B450FBBC71773F3524885F541E30FF
EAC060A58CEAFD46D7334862882225E2CA85AF8D41ED32091BE3022ED99A5183
AE5FE0910CEB739A669D1F016B943893F2F56DEE0B5204E612A84E61DAB5B9A0
18C1ECAD5112DF0F8CEF9F1EA7B7C45843F2E349C35ADAB5CFCD00EFF3E47545
3C65FEA380CA8A94E0221A944A15E8B7E65442FB0D331A416F4E978A7E780523
F7DFA331465EC58B7AAD78F14EA5E1026B5932264551256EC8B4F297F905004B
2ADD636C0A78E37E48F116DA090F407805406B6CDBFE0EF4B9AC4E1C12A34BCF
C060902EDC05418EF152C46B138D5D73F9D16F3537E11A23EF4CCF23FEF25035
8B35879AB8CA20A775706D3ECBCA9F36B989AB8293E62CE9A0D1946444C11F26
5D8CC6FE268840400B482A82DB285EF236633398BC10E6B7C8B37686DAEC69A9
03D86E5348A3394E4876D50BAE0E7D7E1DB1495B28DFA5B2BC9E8ABCE93DD3FB
1B82B1A585B8D18549EE961894667B9F0B82080E61C3162CC69D825FD3A8CB50
728118F475022BBF06860902A7EB8385872B618D8E377635A05F5939E1446943
BE4C4EA88D6A44001B7143B8B1C4B0FB90C6FB888374EE65D93E3640F8D9CA43
341974F7D8B60D288AF38952EBE3249C069E2A01D1DA900400A4917285A91099
80D28D21DAA9BF0DE85594443FB840CB3ADE05A49FF5AE8C034277FD15EB48C7
D2C372177D06B79479D33DEA14A6C272158B0A0513AFD84D50BF963113F7CB49
2AE654D800CC4C0E6260F036841995278EF8833EFD1F4EF8DD49EADFAF002D17
1D95188ACA4493ABA4FD3AE10433C51F16847FDDA01ADFE7EB5B27A2DEB6B2CA
34AF61F21D7428D595B6E9A4AE0ED56909DF9CE1BA68A4AEEE39560C5094488E
049878C1C1F70623E76CAAE496E171B5C00F078B56D4465802A6AA87696A55D3
3DE9457D4EB13D362FADA95B893EFEED4EFEFFCB5E41F3F5F037633C0EDBA4F4
8F8AC5F12BE0D894AFCE6F41EF3599C5E521F9883CAF8C895620B747F69DF925
4615CF56EE466022EB1D118F7E645F553AFB376225F49F3B680DBB7AB421F719
60CAF024B514F8CE90DCA828BB02A93F54FBFABCA39E5FBA5B7B3BBD206F9525
0B51FF6ABF73F91E5E5DE8BA4A0DEC0A4528B4F20EB19CEFDAD5DEA900747839
5FA12FC834DA04E998D1F8B5A21A3B8CD0BD8545E9EE20B6E2AAFD11374B5723
4055FA7CFCC80E619188E47CE9E55A782E184BDCCB78AE031578B2EE356B4036
BC7390540AAA4A6421E61F3E7BC6F983106DD25922706B50D874AB6B1DDFBB96
52F7B3B63DFA31F96B389956B43576F6DF5867996BAF3D234F6517A40DE16214
3C819A4D529F5A73069A805FAD56BAEC84F49F9AF162EBF6BAF2E6F7D191F478
EE3B464269DE375864FDFF3129F66F619B34A8B7A45DE110E3E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 30787079 22725508 1000 600 600 (tmpPSFile)
@start /Fa 135[44 60 44 46 32 33 33 1[46 42 46 69 23
44 1[23 46 42 25 37 46 37 1[42 14[61 5[52 1[43 2[65 54
70[{}26 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-720 -576 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -720 -576 a -720 -576 a
tx@Dict begin startGlobal /pst@angleunit {} def endGlobal end
 -720 -576 a -720
-576 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -720 -576 a -720 -576 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -720 -576 a -720 -576
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -720 -576 a -595 2255 a
tx@Dict begin CP CP translate 1.0  1.0  scale NET  end
 -595 2255 a -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 94.44638 133.16296 68.83865
121.78204 48.92181 96.17432 20.46907 76.25748 -7.98366 56.34064 21.89526
-2.36353 31.85043 -29.01758 41.80559 -55.67204 82.05083 -149.85881
108.67274 -159.90036 135.29466 -169.94193 268.00829 -162.74538 356.21153
-151.36446 444.4152 -139.9831 445.09422 -18.39252 455.79613 7.97107
466.49805 34.33423 458.64159 44.95929 435.8793 107.55566 413.11702
170.15161 120.05367 144.54433 94.44638 133.16296   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1 1 0.8  setrgbcolor  1. .setopacityalpha
 fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 437.47916 -77.36023 67.59349
113.27306   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 437.47916 -74.51479 67.59349
116.1185   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 187.09492 50.6771 56.21257
-85.89613   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 323.66818 147.41669 221.23857
36.45073   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 133.0349 79.12984 33.45029
-26.1452   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 252.53633 147.41669 172.86856
62.05846   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 306.5968 -51.7525 320.82317
-28.99065 340.74 -51.7525 340.74 -28.99065   false /dArrowPos 1. 1
gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq { pop
pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4 2 roll
curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2 ED /x2
ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx
x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0
sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues {
ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3 exp
mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx t t
mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy
t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll sub
Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def /u
u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 312.28726 36.45073 309.44182
10.84343 323.66818 7.99799 320.82317 -14.76428   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 431.7887 -9.07338 409.02641
-31.83566 372.03777 -17.6093 354.96637 -31.83566   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 298.06088 56.36757 298.06088
39.29617 269.60814 30.76027 269.60814 13.68845   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 303.75136 -97.27707 300.9059
-68.82433 326.51363 -75.39047 326.51363 -40.37158   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 175.714 -31.83566 170.02354
-14.76428 141.5708 -34.68112 124.49898 -14.76428   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 189.94038 -63.13387 184.24991
-51.7525 150.98196 -51.7525 138.72536 -23.29976   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 295.21544 -157.028 16.37846
16.53389   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 229.77405 -162.71846 39.14075
-43.21703   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 93.20122 99.04668 16.37846
19.37935   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 184.24991 144.57124 130.18944
81.9753   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 457.396 50.6771 161.48764 141.7258
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 443.16962 93.35622 252.53633
147.41669   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 209.85721 73.43938 209.85721
87.66576 226.92903 99.04668 226.92903 121.80896   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 246.84587 81.9753 239.86206
84.82031 226.92903 84.82031 224.08359 107.58258   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 150.1067 127.49942 141.5708
101.89212 121.65396 124.6544 130.18944 84.82031   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 73.28395 59.21301 93.20122
73.43938 93.20122 76.28484 93.20122 99.04668   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.11806 76.28484 107.4276
81.9753 100.11122 64.90347 90.35577 73.43938   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 64.74847 44.98663 73.28395
56.36757 84.66531 44.98663 84.66531 67.74892   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 98.89168 27.91483 128.76715
37.16231 111.69533 49.25438 121.65396 67.74892   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 138.72536 16.53389 135.88034
33.60571 115.96307 10.84343 113.11806 33.60571   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 312.28726 87.66576 300.9059
93.35622 283.83452 81.9753 283.83452 104.73758   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 263.91768 59.21301 280.98907
79.12984 286.67953 66.04182 286.67953 93.35622   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 17.78296 16.36023
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 235.76625 -0.49797  0
true Ellipse  closepath  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.01881  3.01129 ] 2 DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.2 0.2 0  setrgbcolor   370.33067
26.7769 2 copy moveto 38.41138 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.4 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.2 0.2 0  setrgbcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
253.02127 2.35138 333.62682 19.37935   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  3.01129 -2 0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 383.36528 41.87462 370.44225
34.8157 390.3708 3.72287 391.62073 1.44572 392.87067 -0.83183 394.49266
-3.02127 398.65317 3.22488 402.81323 9.47107 407.3484 12.06384 404.4743
17.58107 401.59978 23.09874 396.28833 48.9331 383.36528 41.87462  
false /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray
n 1 eq { pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3
ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub
3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub
def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def
/getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0
add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t
3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp mul by
t t mul mul add cy t mul add y0 add } def /getdL { getValues 3 -1 roll
sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0
100 { /t0 u def /u u du add def /t u def getdL add } repeat } def /GetArrowPos
{ /ende 0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def
/u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def
/sum getdL sum add def sum ende gt {exit} if } loop u } def /ArrowPos
0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse
def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto } ifelse   gsave 1 1 0.6  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 389.7504 55.21228 385.754 50.81776
379.69537 45.81717 383.7621 45.90358 387.82883 45.98953 390.76067 45.86015
393.69598 45.30183 396.6313 44.74352 407.72308 32.21642 405.80283 38.29501
403.88298 44.37361 393.74635 59.60678 389.7504 55.21228   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1 1 0.6  setrgbcolor  1. .setopacityalpha
 fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 372.64731 62.00983 369.65079
59.06236 376.78264 28.65419 376.28119 36.99516 375.77974 45.33614 389.8611
57.92879 388.49916 59.3654 387.13765 60.80244 377.48944 63.44775 377.7738
63.44775 378.05818 63.44775 375.64384 64.9573 372.64731 62.00983  
false /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray
n 1 eq { pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3
ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub
3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub
def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def
/getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0
add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t
3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp mul by
t t mul mul add cy t mul add y0 add } def /getdL { getValues 3 -1 roll
sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0
100 { /t0 u def /u u du add def /t u def getdL add } repeat } def /GetArrowPos
{ /ende 0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def
/u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def
/sum getdL sum add def sum ende gt {exit} if } loop u } def /ArrowPos
0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse
def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto } ifelse   gsave 1 1 0.6  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 400.51134 33.3565 398.6714
30.48892 401.84332 23.46735 403.0759 22.9559 404.30846 22.4449 403.24608
14.48816 405.58531 17.05489 407.92453 19.62117 408.5723 29.2303 406.42496
31.24782 404.27763 33.26578 402.35173 36.2241 400.51134 33.3565   false
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray
n 1 eq { pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3
ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub
3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub
def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def
/getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0
add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t
3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp mul by
t t mul mul add cy t mul add y0 add } def /getdL { getValues 3 -1 roll
sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0
100 { /t0 u def /u u du add def /t u def getdL add } repeat } def /GetArrowPos
{ /ende 0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def
/u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def
/sum getdL sum add def sum ende gt {exit} if } loop u } def /ArrowPos
0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse
def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto } ifelse   gsave 1 1 0.6  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 356.1972 15.2857 356.01051
10.81087 344.92134 -2.22546 345.83914 -1.51736 346.75739 -0.80925 337.78601
3.26483 335.19716 17.4643 332.60829 31.66374 334.27068 36.66476 336.79572
38.92455 339.32031 41.18431 356.3839 19.76053 356.1972 15.2857   false
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray
n 1 eq { pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3
ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub
3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub
def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def
/getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0
add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t
3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp mul by
t t mul mul add cy t mul add y0 add } def /getdL { getValues 3 -1 roll
sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0
100 { /t0 u def /u u du add def /t u def getdL add } repeat } def /GetArrowPos
{ /ende 0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def
/u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def
/sum getdL sum add def sum ende gt {exit} if } loop u } def /ArrowPos
0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse
def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto } ifelse   gsave 1 1 0.6  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   370.33067 26.7769 2
copy moveto 41.54118 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin { 73.28395 4.5838 } PutCoor PutBegin  end
 -568
839 a Fa(Lo)r(cal)27 b(fractures)-568 839 y
tx@Dict begin  PutEnd  end
 -568 839
a -568 839 a
tx@Dict begin { 86.94159 -117.76308 } PutCoor PutBegin  end
 -568 839 a Fa(Join)n(t)g(sets)-568 839 y
tx@Dict begin  PutEnd  end

-568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot -24.720392 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 59.3997 163.00587 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a -568 839 a
tx@Dict begin { 401.62886 -54.02878 } PutCoor PutBegin  end
 -568 839 a Fa(F)-7
b(ault)-568 839 y
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568
839 a
tx@Dict begin  PutEnd  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 105.72006 134.89742 93.06447
130.33185 94.5432 116.7871 121.65396 108.15176 148.76474 99.51643 146.55576
110.98419 183.68074 109.85886 220.80571 108.73354 254.0398 147.31726
222.94566 146.27834 191.85153 145.23984 118.3761 139.46254 105.72006
134.89742   false /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse
def BezierNArray n 1 eq { pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n
4 sub 3 idiv { 6 2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll
ArrowB /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul
def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1
sub 3 mul cy sub def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub
cy sub by sub def /getValues { ax t0 3 exp mul bx t0 t0 mul mul add
cx t0 mul add x0 add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul
add y0 add ax t 3 exp mul bx t t mul mul add cx t mul add x0 add ay
t 3 exp mul by t t mul mul add cy t mul add y0 add } def /getdL { getValues
3 -1 roll sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01
def 0 100 { /t0 u def /u u du add def /t u def getdL add } repeat }
def /GetArrowPos { /ende 0.5  1 gt {ArrowPos} {ArrowPos CurveLength
mul} ifelse def /u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du
add def /t u def /sum getdL sum add def sum ende gt {exit} if } loop
u } def /ArrowPos 0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi
}{ 1. } ifelse def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def
/t GetArrowPos def /t0 t 0.95 mul def getValues ArrowInside pop pop
pop pop } repeat x1 y1 x2 y2 x3 y3 curveto } ifelse   gsave 0.4 1 1
 setrgbcolor  1. .setopacityalpha  fill  grestore gsave 1.13791 SLW
0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
-568 839 a
tx@Dict begin { 285.29024 66.95485 } PutCoor PutBegin  end
 -568 839 a -16 x Fa(F)g(racturing)27 b(Fluid)-568
839 y
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin { 109.13469 121.80896 } PutCoor PutBegin  end
 -568 839 a Fa(Ground)g(w)n(ater)g(reserv)n
(oir)-568 839 y
tx@Dict begin  PutEnd  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
271.88441 111.56595 240.58623 120.67104   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.01881  3.01129 ] -2 0 add  DashLine  grestore
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
191.64748 89.94203 214.97893 113.84222   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.01881  3.01129 ] -2 0 add  DashLine  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
174.00691 53.52255 139.29453 71.73228   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.01881  3.01129 ] -2 0 add  DashLine  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
145.55417 14.8268 171.16147 42.71037   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.01881  3.01129 ] -2 0 add  DashLine  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
153.5209 -20.45474 131.32779 -14.1951   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.01881  3.01129 ] -2 0 add  DashLine  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
139.29453 84.25156 152.95172 100.75421   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.01881  3.01129 ] -2 0 add  DashLine  grestore
end
 
@endspecial -568 839 a
tx@Dict begin { 375.4524 87.09657 } PutCoor PutBegin  end
 -568 839 a Fa(Ro)r(c)n(k)g(matrix)
-568 839 y
tx@Dict begin  PutEnd  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
376.29942 53.31068 399.35258 85.38948   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  3.01129 -2 0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
102.87505 -84.18861 101.7367 -106.38216   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  3.01129 -2 0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
64.1793 -79.6365 101.7367 -105.81297   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  3.01129 -2 0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
107.99634 30.76027 103.44423 15.39598   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  3.01129 -2 0 add  DotLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
162.62555 76.85358 162.05681 99.61586   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
175.714 76.85358 175.14482 99.04668   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
199.61421 54.66046 199.61421 74.00856   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
218.39313 50.6771 218.39313 73.43938   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
187.09492 10.84343 187.09492 33.60571   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
198.47629 10.84343 198.47629 33.60571   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
175.714 7.99799 175.714 27.91483   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
212.70265 13.68845 212.70265 30.76027   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.41373 SLW 0  setgray   0. true 386.26413 -102.96753
252.53633 -139.95618 .5 Frame  gsave 1  setgray  1. .setopacityalpha
 fill  grestore gsave 3.41373 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore gsave 1.13791 SLW 1
 setgray  1. .setopacityalpha  stroke grestore  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
275.29861 -114.34888 258.22679 -114.34888   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.01881  3.01129 ] -2 0 add  DashLine  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.13791
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
275.29861 -125.72981 258.22679 -125.72981   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin { 280.98907 -120.03935 } PutCoor PutBegin  end
 -568 839 a -16 x
Fa(Flo)n(w)g(through)g(fractures)-568 839 y
tx@Dict begin  PutEnd  end
 -568 839
a -568 839 a
tx@Dict begin { 280.98907 -131.42027 } PutCoor PutBegin  end
 -568 839 a -16 x Fa(Flo)n(w)g(through)g(p)r(ores)-568
839 y
tx@Dict begin  PutEnd  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 346.00977 53.86465 342.11453
50.82645 335.33609 42.6409 340.7222 40.25262 346.10876 37.86478 357.814
23.07443 358.33932 20.54636 358.86465 18.01784 367.4114 49.57608 367.4114
55.26654 367.4114 60.95744 349.905 56.90288 346.00977 53.86465   false
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray
n 1 eq { pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3
ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub
3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub
def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def
/getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0
add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t
3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp mul by
t t mul mul add cy t mul add y0 add } def /getdL { getValues 3 -1 roll
sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0
100 { /t0 u def /u u du add def /t u def getdL add } repeat } def /GetArrowPos
{ /ende 0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def
/u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def
/sum getdL sum add def sum ende gt {exit} if } loop u } def /ArrowPos
0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse
def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto } ifelse   gsave 1 1 0.6  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.27626 SLW 0.2 0.2 0  setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def /ArrowInside { } def  [ 370.56078 60.8654
374.89624 23.88716 386.63142 7.3498 393.9439 -2.41432   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 2.27626 SLW 0.2 0.2 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.27626 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 370.56078 60.8654 360.49924
12.17195 355.24423 9.43547 346.15001 -3.49797   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 2.27626 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   234.57579 -37.90645
2 copy moveto 19.60077 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 1 0.8 0.4  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   234.57579 -37.90645
2 copy moveto 17.38788 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.4 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.51328
-10.59293 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.00748
-12.48975 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   235.77797
-13.75444 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   233.5017 -14.38657
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   235.01906
-15.39857 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   232.7428 -16.03072
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   236.28375
-15.90437 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   235.1454 -11.35182
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   236.91588
-17.42174 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.38693
-17.67442 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   232.237 -17.67442
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   231.85754
-18.68643 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   230.84598
-20.07747 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   230.21384
-21.46849 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   228.82281
-22.60641 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   240.3305 -22.60641
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   239.19215
-21.34172 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   238.18057
-19.69801 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   237.54802
-17.92754 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   233.37535
-19.57167 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   235.27217
-18.93912 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   236.28375
-19.82436 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   232.49011
-21.21538 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.63962
-20.96227 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   237.04222
-21.46849 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   231.4781 -21.72118
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.51328
-21.34172 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   235.9043 -21.97429
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   238.05423
-22.60641 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   235.9043 -12.3634
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.76639
-9.58134 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.89273
-7.55818 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 234.69691 13.09453 235.12369
-8.15125 231.94264 -16.342 226.95247 -23.07095   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 234.69691 13.09453 234.69691
-11.36095 238.16234 -16.72232 242.17479 -23.07095   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839
a
tx@Dict begin { 469.27576 -130.41824 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.63788
-65.20912 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839
a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 470.28778 -126.6246 } PutCoor PutBegin  end
 -568 839 a -568 839
a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   235.14366
-63.3123 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -568
839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568
839 a -568 839 a
tx@Dict begin { 466.74681 -124.09566 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   233.37361
-62.0476 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839
a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 471.29935 -122.83096 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   235.64946
-61.41548 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
-568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839
a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 468.26418 -120.8078 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.13208
-60.4039 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568
839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568
839 a
tx@Dict begin { 472.81673 -119.5431 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   236.40836
-59.77133 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839
a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 465.73523 -119.79622 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   232.8674 -59.8981
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
-568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839
a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 468.0115 -128.90088 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.00575
-64.45065 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568
839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568
839 a
tx@Dict begin { 464.47054 -116.76105 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   232.23526
-58.38074 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839
a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 469.52887 -116.25525 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.76465
-58.12762 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
-568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839
a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 473.82831 -116.25525 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   236.91415
-58.12762 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568
839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568
839 a
tx@Dict begin { 474.5872 -114.2321 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   237.2936 -57.11604
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839
a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 476.61037 -111.45003 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   238.30518
-55.725 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
-568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839
a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 477.87506 -108.66797 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   238.9373 -54.33398
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568
839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568
839 a
tx@Dict begin { 480.65712 -106.39171 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   240.32834
-53.19563 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839
a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 457.64215 -106.39171 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   228.82108
-53.19563 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
-568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839
a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 459.918 -108.92065 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   229.959 -54.46033
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568
839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568
839 a
tx@Dict begin { 461.94159 -112.2085 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   230.97058
-56.10446 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839
a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 463.20584 -115.74947 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   231.60313
-57.87451 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
-568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839
a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 471.55203 -112.46161 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   235.77623
-56.2308 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568
839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568
839 a
tx@Dict begin { 467.75839 -113.7263 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   233.87941
-56.86293 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839
a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 465.73523 -111.95583 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   232.8674 -55.97769
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
-568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839
a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 473.32251 -109.17377 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   236.66147
-54.58665 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568
839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568
839 a
tx@Dict begin { 469.02309 -109.67955 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.51154
-54.83977 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839
a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 464.21786 -108.66797 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   232.10893
-54.33398 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
-568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839
a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 475.34567 -108.16219 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   237.67305
-54.08087 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568
839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568
839 a
tx@Dict begin { 469.27576 -108.92065 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.63788
-54.46033 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839
a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 466.4937 -107.65639 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   233.24684
-53.82819 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
-568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839
a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 462.19426 -106.39171 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   231.09735
-53.19563 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568
839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568
839 a
tx@Dict begin { 466.4937 -126.87772 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   233.24684
-63.43863 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360
arc closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill
 grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839
a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839 a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 468.76997 -132.44183 } PutCoor PutBegin  end
 -568 839
a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.3852 -66.2207
2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
-568 839 a
tx@Dict begin RotEnd  end
 -568 839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a -568 839
a
tx@Dict begin  gsave STV CP T /ps@rot 180.0 def grestore  end
 -568 839 a -568 839 a
tx@Dict begin { 468.51729 -136.48816 } PutCoor PutBegin  end
 -568 839 a -568 839 a
tx@Dict begin ps@rot  RotBegin  end
 -568 839
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   234.25842
-68.2443 2 copy moveto 1.26468 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -568 839 a
tx@Dict begin RotEnd  end
 -568
839 a -568 839 a
tx@Dict begin  PutEnd  end
 -568 839 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 234.45422 -88.89658 234.0279
-67.65123 237.20851 -59.46004 242.19867 -52.73108   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 234.45422 -88.89658 234.45422
-64.44153 230.98924 -59.08015 226.97635 -52.73108   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.56917 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 255.41043 15.25227 250.04515
2.733 243.37914 12.48845 236.22514 -7.67236   false /dArrowPos 1. 1
gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq { pop
pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4 2 roll
curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2 ED /x2
ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx
x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0
sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues {
ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3 exp
mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx t t
mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy
t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll sub
Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def /u
u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 0.56917 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.56917 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 262.40161 -2.95746 252.6466
-7.21434 251.18306 3.19147 241.10287 2.24544   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 0.56917 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.56917 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 213.26054 -88.52104 218.62582
-76.00175 225.29184 -85.75722 232.44583 -65.59639   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 0.56917 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.56917 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 206.26936 -70.3113 216.02437
-66.05441 217.48792 -76.46024 227.5681 -75.5142   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 0.56917 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.56917 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 261.97787 -77.40147 248.92807
-73.49973 244.023 -81.38484 237.01357 -60.95744   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 0.56917 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.56917 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 244.68465 -96.91324 239.3428
-87.70743 249.5133 -85.06647 247.4233 -75.15994   false /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq
{ pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll
4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 0.56917 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.56917 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 208.25084 6.67468 220.90166
1.62764 226.48836 9.0456 231.65393 -11.92448   false /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq {
pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4
2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2
ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul
def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax
x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues
{ ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3
exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx
t t mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add
cy t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll
sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def
/u u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 0.56917 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.56917 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 227.21036 24.5714 231.71298
14.9271 221.34753 13.2009 222.54842 3.14761   false /dArrowPos 1. 1
gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray n 1 eq { pop
pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6 2 roll 4 2 roll
curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3 ED /y2 ED /x2
ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx
x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0
sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def /getValues {
ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0 add ay t0 3 exp
mul by t0 t0 mul mul add cy t0 mul add y0 add ax t 3 exp mul bx t t
mul mul add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy
t mul add y0 add } def /getdL { getValues 3 -1 roll sub 3 1 roll sub
Pyth } def /CurveLength { /u 0 def /du 0.01 def 0 100 { /t0 u def /u
u du add def /t u def getdL add } repeat } def /GetArrowPos { /ende
0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def /u 0 def
/du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def /sum getdL
sum add def sum ende gt {exit} if } loop u } def /ArrowPos 0.  def
/loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse def loopNo
cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos def /t0 t
0.95 mul def getValues ArrowInside pop pop pop pop } repeat x1 y1 x2
y2 x3 y3 curveto } ifelse   gsave 0.56917 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 352.52513 58.53703 352.00241
56.48825 358.3085 59.43617 362.52501 58.95338 366.74107 58.47017 365.72559
58.33905 367.56815 59.06801 369.41026 59.79738 373.945 64.90738 369.07292
64.00868 364.20084 63.11041 353.04785 60.5858 352.52513 58.53703  
false /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def BezierNArray
n 1 eq { pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB /y3 ED /x3
ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub
3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3 mul cy sub
def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub by sub def
/getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0 mul add x0
add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0 add ax t
3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp mul by
t t mul mul add cy t mul add y0 add } def /getdL { getValues 3 -1 roll
sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01 def 0
100 { /t0 u def /u u du add def /t u def getdL add } repeat } def /GetArrowPos
{ /ende 0.5  1 gt {ArrowPos} {ArrowPos CurveLength mul} ifelse def
/u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du add def /t u def
/sum getdL sum add def sum ende gt {exit} if } loop u } def /ArrowPos
0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1. } ifelse
def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto } ifelse   gsave 1 1 0.6  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.27626
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.0 1.4 1.50565 2.0 CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
365.27884 36.40645 312.85643 65.47264   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.50565 2.0  CLW mul add dup 1.4  mul exch 0.0 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.27626 SLW 0  setgray  1. .setopacityalpha
  3.01129 -2 0 add  DotLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   358.31761
15.2692 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   358.5703 13.49872
2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   358.44395
16.53389 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   359.20242
18.30438 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   360.84656
19.18962 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   359.96132
18.81017 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   361.4787 19.94809
2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   362.2376 20.83333
2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave
1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   358.69662
11.72867 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   377.03314
32.34102 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   376.02156
32.84682 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   376.02156
31.07632 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   376.90637
29.1795 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   376.90637
30.06476 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   377.28583
27.91483 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   376.65369
25.76532 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   377.53893
27.40903 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   377.15948
25.5122 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor   377.28583
23.74173 2 copy moveto 1.51736 .5 CLW mul sub dup 0 rmoveto 0 360 arc
closepath  gsave 0.6 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 1.13791 SLW 0.4 1 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0.4 1 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 372.41374 43.4836 375.30998
26.39658 373.9667 36.82713 370.91069 36.6118 367.85425 36.39645 365.11777
32.79993 367.90417 41.0953 370.69101 49.3907 369.5175 60.57062 372.41374
43.4836   false /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse
def BezierNArray n 1 eq { pop pop }{ 2 copy /y0 ED /x0 ED ArrowA n
4 sub 3 idiv { 6 2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll
ArrowB /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul
def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1
sub 3 mul cy sub def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub
cy sub by sub def /getValues { ax t0 3 exp mul bx t0 t0 mul mul add
cx t0 mul add x0 add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul
add y0 add ax t 3 exp mul bx t t mul mul add cx t mul add x0 add ay
t 3 exp mul by t t mul mul add cy t mul add y0 add } def /getdL { getValues
3 -1 roll sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01
def 0 100 { /t0 u def /u u du add def /t u def getdL add } repeat }
def /GetArrowPos { /ende 0.5  1 gt {ArrowPos} {ArrowPos CurveLength
mul} ifelse def /u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du
add def /t u def /sum getdL sum add def sum ende gt {exit} if } loop
u } def /ArrowPos 0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi
}{ 1. } ifelse def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def
/t GetArrowPos def /t0 t 0.95 mul def getValues ArrowInside pop pop
pop pop } repeat x1 y1 x2 y2 x3 y3 curveto } ifelse   gsave 1  setgray
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0.4 1 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -595 2255 a
tx@Dict begin  CP CP translate 1 1.0 div 1 1.0 div scale NET  end
 -595
2255 a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
%%EndDocument 
countdictstack InitDictCount sub { end } repeat 
cleartomark restore grestore 
